Program.Sub.Preflight.Start


Program.Sub.Preflight.End
'this library file holds most of the datatables used in GCG_4986_BOM_ROUTER
Program.Sub.Build_Required_DataTables.Start
'These Datatables are required throughout the program runtime
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)
	v.Local.sDec.Declare
	v.Local.iCnt.Declare
	V.Local.sHead.Declare
	v.Local.sExp.Declare

	'table for material grid
	f.Intrinsic.Control.If(v.DataTable.MATERIAL.Exists)
		F.Data.DataTable.Close("MATERIAL")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("MATERIAL",True)
	F.Data.DataTable.AddColumn("MATERIAL","PART","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","PL","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","DESCRIPTION","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","DESCRIPTION_2","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","DESCRIPTION_3","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","SORT_CODE","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","COST","FLOAT",0)
	F.Data.DataTable.AddColumn("MATERIAL","SOURCE_CODE","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","SOURCE","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","UM","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","PUofM","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","PURCHASE_FACTOR","FLOAT",0)
	F.Data.DataTable.AddColumn("MATERIAL","PURCH_COST","FLOAT",0)
	F.Data.DataTable.AddColumn("MATERIAL","TEXT","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","CODE_BOM","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","BOM_REF","STRING")	
	F.Data.DataTable.AddColumn("MATERIAL","Location","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","Issue_UM","STRING")
	F.Data.DataTable.AddColumn("MATERIAL","Consump_Conv","Float",0)
	F.Data.DataTable.AddColumn("MATERIAL","Consump_Cost","Float",0)
	F.Data.DataTable.AddColumn("MATERIAL","Weight","Float",0)
	F.Data.DataTable.AddColumn("MATERIAL","Consump_Weight","Float",0)
	f.Data.DataTable.AddColumn("MATERIAL","DISPLAY_PART","STRING","")
	f.Data.DataTable.AddColumn("MATERIAL","Prop_Code","STRING","")
	f.Data.DataTable.AddColumn("MATERIAL","Lead","Float",0)
	F.Data.DataTable.AddExpressionColumn("MATERIAL","PARTTrim","STRING","Trim(Part)")
	'Get standard day length
	f.Global.General.ReadOption("400799",2,0,"0000",v.Global.fStdDayLength)		
	f.Intrinsic.String.Build("Lead * {0}",v.Global.fStdDayLength,v.Local.sExp)
	f.Data.DataTable.AddExpressionColumn("MATERIAL","LeadHours","Float",v.Local.sExp)
	
	'table for WC/WG grid
	f.Intrinsic.Control.If(v.DataTable.WCENTER.Exists)
		F.Data.DataTable.Close("WCENTER")
	f.Intrinsic.Control.EndIf	
	F.Data.DataTable.Create("WCENTER",True)
	F.Data.DataTable.AddColumn("WCENTER","WG","STRING")
	F.Data.DataTable.AddColumn("WCENTER","WC","STRING")
	F.Data.DataTable.AddColumn("WCENTER","DESCRIPTION","STRING")
	F.Data.DataTable.AddColumn("WCENTER","DESCR","STRING")
	F.Data.DataTable.AddColumn("WCENTER","DEPT","STRING")
	F.Data.DataTable.AddColumn("WCENTER","COST","FLOAT",0)
	F.Data.DataTable.AddColumn("WCENTER","FOHD","FLOAT",0)
	F.Data.DataTable.AddColumn("WCENTER","SOHD","FLOAT",0)
	F.Data.DataTable.AddColumn("WCENTER","TYPE","STRING")
	'clone the labor table to use for opcodes
	f.Intrinsic.Control.If(v.DataTable.OPERATIONS.Exists)
		F.Data.DataTable.Close("OPERATIONS")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Clone("WCENTER","OPERATIONS",True)
	f.Data.DataTable.AddColumn("OPERATIONS","SS","FLOAT",0)
	F.Data.DataTable.AddColumn("OPERATIONS","SR","FLOAT",0)
	F.Data.DataTable.AddColumn("OPERATIONS","UM","STRING")
	F.Data.DataTable.AddColumn("OPERATIONS","TEXT","STRING")	
	'table for outside grid
	f.Intrinsic.Control.If(v.DataTable.OUTS.Exists)
		F.Data.DataTable.Close("OUTS")
	f.Intrinsic.Control.EndIf	
	F.Data.DataTable.Create("OUTS",True)
	F.Data.DataTable.AddColumn("OUTS","VENDOR","STRING")
	F.Data.DataTable.AddColumn("OUTS","CODE","STRING")
	F.Data.DataTable.AddColumn("OUTS","DESCRIPTION","STRING")
	F.Data.DataTable.AddColumn("OUTS","SETUP","FLOAT",0)
	F.Data.DataTable.AddColumn("OUTS","RUNTIME","FLOAT",0)
	F.Data.DataTable.AddColumn("OUTS","UM","STRING")
	F.Data.DataTable.AddColumn("OUTS","LEAD","FLOAT",0)
	F.Data.DataTable.AddColumn("OUTS","TEXT","STRING")
	
	'Create Bom table 
	f.Intrinsic.Control.If(v.DataTable.BOM.Exists)
		F.Data.DataTable.Close("BOM")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.CallSub("Create_Bom_Table","sTable","Bom")
	F.Data.DataView.Create("BOM","V_BOM",22)	
	
'	'PartLevelInfinite
'	f.Intrinsic.Control.If(v.DataTable.PartLevelInfinite.Exists)
'		f.Data.DataTable.close("PartLevelInfinite")
'	f.Intrinsic.Control.EndIf
'	f.Data.DataTable.Create("PartLevelInfinite",True)
'	f.Data.DataTable.AddColumn("PartLevelInfinite","PartTrimInfinite","String","")
'	f.Data.DataTable.AddColumn("PartLevelInfinite","Level","Long","0")	
	
	'Create Child Table
	f.Intrinsic.Control.If(v.DataTable.CHILD.Exists)
		F.Data.DataTable.Close("CHILD")
	f.Intrinsic.Control.EndIf			
	f.Intrinsic.Control.CallSub(Create_Child_Table,"sTable","Child")
	
	f.Intrinsic.Control.CallSub("Create_CutList_Table")	
		
	'table used for storing build quantities, either a single router, or the bom parent
	f.Intrinsic.Control.If(v.DataTable.BUILDQTY.Exists)
		F.Data.DataTable.Close("BUILDQTY")
	f.Intrinsic.Control.EndIf	
	f.Data.DataTable.Create("BUILDQTY",True)
	f.Data.DataTable.AddColumn("BUILDQTY","PART","STRING")
	f.Data.DataTable.AddColumn("BUILDQTY","QUANTITY","FLOAT",0)
	f.Data.DataTable.AddColumn("BUILDQTY","PRICE","FLOAT",0)
	
	f.Intrinsic.Control.If(v.DataTable.BookMarks.Exists)
		F.Data.DataTable.Close("BookMarks")
	f.Intrinsic.Control.EndIf	
	f.Data.DataTable.Create("BookMarks",True)
	f.Data.DataTable.AddColumn("BookMarks","Part","STRING","")
	f.Data.DataTable.AddColumn("BookMarks","Descr","STRING","")
	f.Data.DataTable.AddColumn("BookMarks","Delete","String","Delete")
	
	f.Intrinsic.Control.If(v.DataTable.BookMarks2.Exists)
		F.Data.DataTable.Close("BookMarks2")
	f.Intrinsic.Control.EndIf	
	f.Data.DataTable.Create("BookMarks2",True)	
	
	f.Intrinsic.Control.If(v.DataTable.PhantomList.Exists)
		F.Data.DataTable.Close("PhantomList")
	f.Intrinsic.Control.EndIf	
	f.Data.DataTable.Create("PhantomList",True)	
	f.Data.DataTable.AddColumn("PhantomList","Part","String","")
	
	f.Intrinsic.Control.If(v.DataTable.OnTop.Exists)
		f.Data.DataTable.Close("OnTop")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("OnTop",True)
	f.Data.DataTable.AddColumn("OnTop","Fm","String","")
	
	f.Intrinsic.Control.CallSub("Build_Required_Plus")
	
	f.Intrinsic.Control.CallSub(Create_GV_Serialize)
		
f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Build_Required_DataTables.End

Program.Sub.Create_Bom_Table.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	'table for storing BOM data
	'see note in BuildBomCompare subroutine when adding fields to this datatable
	
	F.Data.DataTable.Create(v.Args.sTable,True)
	f.Data.DataTable.AddColumn(v.Args.sTable,"SelectSeq","Boolean",False)
	f.Data.DataTable.AddColumn(v.Args.sTable,"BPARENT","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"DESCR_BP","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"BOM_SEQ","STRING")
	f.Data.DataTable.AddColumn(v.Args.sTable,"RTR_SEQ","STRING")
	f.Data.DataTable.AddColumn(v.Args.sTable,"PART","STRING","")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"DESCRIPTION","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"DESCRIPTION_2","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"DESCRIPTION_3","STRING","")

	f.Data.DataTable.AddColumn(v.Args.sTable,"QTY","FLOAT",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"COST","FLOAT",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"UM","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"PL","STRING","")
	F.Data.DataTable.AddColumn(v.Args.sTable,"CAT_CODE","STRING","")
	F.Data.DataTable.AddColumn(v.Args.sTable,"SOURCE_CODE","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"OP_CODE","STRING")
	F.Data.DataTable.AddColumn(v.Args.sTable,"FREQUENCY","FLOAT",0)
	F.Data.DataTable.AddColumn(v.Args.sTable,"SET_UP","FLOAT",0)
	F.Data.DataTable.AddColumn(v.Args.sTable,"WC_Factor","FLOAT",0)
	F.Data.DataTable.AddColumn(v.Args.sTable,"TAG","STRING","")
	F.Data.DataTable.AddColumn(v.Args.sTable,"PURCHASE_FACTOR","FLOAT",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"TIER","STRING")
	f.Data.DataTable.AddColumn(v.Args.sTable,"CTIER","FLOAT")
	f.Data.DataTable.AddColumn(v.Args.sTable,"COMPLETE","STRING")
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"PAR_INDEX","STRING","TRIM([BPARENT]) + '@' + TIER")
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"CH_INDEX","STRING","IIF(TIER < '1', CTIER, TIER + '.' + CTIER)")
	F.Data.DataTable.AddColumn(v.Args.sTable,"EXTENDED","FLOAT",0)
	F.Data.DataTable.AddColumn(v.Args.sTable,"EXT2","FLOAT",0)
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"PURCH_COST","FLOAT","0")
	
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"PURCHCOST2","FLOAT","IIf(PURCHASE_FACTOR > 0,COST * PURCHASE_FACTOR,COST)")
	
	F.Data.DataTable.AddColumn(v.Args.sTable,"Loc","String",v.Global.sLoc)
	F.Data.DataTable.AddColumn(v.Args.sTable,"Issue_UM","String","")
	F.Data.DataTable.AddColumn(v.Args.sTable,"Consump_Conv","Float",0)
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"Consump_Cost","Float","IIF(Issue_UM <> '' and Consump_Conv > 0,Consump_Conv * Cost,Cost)")
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"Consump_Extended","Float","Qty* Consump_Cost")
	F.Data.DataTable.AddColumn(v.Args.sTable,"Weight","Float",0)
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"Consump_Weight","Float","IIF(Issue_UM <> '' and Consump_Conv > 0,Consump_Conv * Weight,Weight)")
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"ExtendedWeight","Float","Weight * Qty")
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"ExtendedConsumpWeight","Float","Consump_Weight * Qty")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Ord","float",0)
	
	'Additional columns for Bom
	f.Data.DataTable.AddColumn(v.Args.sTable,"Insert_Bom","STRING","00")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Date_Maintenance","STRING","000000")	
	f.Data.DataTable.AddExpressionColumn(v.Args.sTable,"QUANTITY_6","Float","QTY")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Date_Start","STRING","000000")		
	f.Data.DataTable.AddColumn(v.Args.sTable,"Date_Stop","STRING","000000")
	f.Data.DataTable.AddColumn(v.Args.sTable,"BM_Serial_Start","STRING","")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"BM_Serial_Stop","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Purge_Flag","STRING","")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"ORDR_USR_FLAG","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"DRAWING","STRING","")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"Date_Last_Chg","STRING","000000")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Time_Last_Chg","STRING","00000000")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"Last_Chg_By","STRING",v.Caller.User)
	f.Data.DataTable.AddColumn(v.Args.sTable,"Last_Chg_Prog","STRING","ESTIMATE")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"Drawing_Size","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"REQ_TRACE","STRING","")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"Cost_Date","STRING","00000000")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Inactive","boolean",False)	
	f.Data.DataTable.AddColumn(v.Args.sTable,"Chg_Rev","Float",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"Setup_Qty","Float",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"DISPLAY_PART","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Sort_Code","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"PhantomPart","String","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"RefPart","String","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"SeqSort","Long",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"Lead","Float",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"PartID","String","")
	f.Data.DataTable.AddExpressionColumn(v.Args.sTable,"PartTrim2","String","Trim(Part)")
	
	'Router field continued
	f.Data.DataTable.AddColumn(v.Args.sTable,"Amt_Minimum","Long",0)
	f.Data.DataTable.AddExpressionColumn(v.Args.sTable,"MinFlag","String","IIF(Amt_Minimum <> 0,'M','')")	
	
	'Bom Field continued

f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry

Program.Sub.Create_Bom_Table.End

Program.Sub.Create_Child_Table.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	'table for workspace
	F.Data.DataTable.Create(v.Args.sTable,True)	
	
	f.Data.DataTable.AddColumn(v.Args.sTable,"BPARENT","STRING")
	f.Data.DataTable.AddColumn(v.Args.sTable,"DESCR_BP","STRING")
	f.Data.DataTable.AddColumn(v.Args.sTable,"BOM_SEQ","STRING")
	f.Data.DataTable.AddColumn(v.Args.sTable,"RTR_SEQ","STRING")
	f.Data.DataTable.AddColumn(v.Args.sTable,"SelectSeq","Boolean",False)
	f.Data.DataTable.AddColumn(v.Args.sTable,"PART","STRING")
	f.Data.DataTable.AddColumn(v.Args.sTable,"DESCRIPTION","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"DESCRIPTION_2","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"DESCRIPTION_3","STRING","")

	'child specific
	f.Data.DataTable.AddColumn(v.Args.sTable,"LMO","STRING")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"COMMENTS","STRING","")		
	f.Data.DataTable.AddColumn(v.Args.sTable,"PL","STRING")
	
	'child specific 
	f.Data.DataTable.AddColumn(v.Args.sTable,"CATEGORY","STRING")

	f.Data.DataTable.AddColumn(v.Args.sTable,"CAT_CODE","STRING")
	
	'child specific
	f.Data.DataTable.AddColumn(v.Args.sTable,"SOURCE","STRING")
	'Bom has Source_Code
	f.Data.DataTable.AddColumn(v.Args.sTable,"SOURCE_CODE","STRING")
	
	f.Data.DataTable.AddColumn(v.Args.sTable,"OP_CODE","STRING")
	
	f.Data.DataTable.AddColumn(v.Args.sTable,"UM","STRING")
	
	'child specific
	f.Data.DataTable.AddColumn(v.Args.sTable,"TYPE","STRING")
		
	f.Data.DataTable.AddColumn(v.Args.sTable,"SET_UP","FLOAT",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"FREQUENCY","FLOAT",0)
	f.Data.DataTable.AddExpressionColumn(v.Args.sTable,"FREQUENCY2","FLOAT","IIF(IsNull(Frequency,0) = 0,1,Frequency)")
	f.Data.DataTable.AddColumn(v.Args.sTable,"QTY","FLOAT",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"COST","FLOAT",0)
	
	f.Data.DataTable.AddColumn(v.Args.sTable,"WC_Factor","FLOAT",0)
	f.Data.DataTable.AddExpressionColumn(v.Args.sTable,"WCFactor2","FLOAT","IIF(IsNull(WC_Factor,0) = 0,1,WC_Factor)")	
	
	f.Data.DataTable.AddColumn(v.Args.sTable,"PURCHASE_FACTOR","FLOAT",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"PURCH_COST","FLOAT",0)
	
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"PURCHCOST2","FLOAT","IIF(LMO = 'M',IIf(PURCHASE_FACTOR > 0,COST * PURCHASE_FACTOR,COST),0)")		
	f.Data.DataTable.AddColumn(v.Args.sTable,"TAG","STRING")
	F.Data.DataTable.AddColumn(v.Args.sTable,"SIGNOFF_GRPUSR","STRING")
	F.Data.DataTable.AddColumn(v.Args.sTable,"SIGNOFF_TYPE","STRING")
	f.Data.DataTable.AddColumn(v.Args.sTable,"TIER","STRING")
	f.Data.DataTable.AddColumn(v.Args.sTable,"CTIER","FLOAT")
	f.Data.DataTable.AddColumn(v.Args.sTable,"COMPLETE","STRING","")
	
	'child specific
	F.Data.DataTable.AddColumn(v.Args.sTable,"RTR_SEQ_NUM","String","")
	
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"PAR_INDEX","STRING","TRIM([BPARENT]) + '@' + TIER")
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"CH_INDEX","STRING","IIF(TIER < '1', CTIER, TIER + '.' + CTIER)")
	'Extended
	F.Data.DataTable.AddColumn(v.Args.sTable,"EXTENDED","FLOAT",0)
	f.Intrinsic.Control.If(v.Global.sType,=,"HPP")
		f.Intrinsic.Control.If(v.Global.bIncludeWCFactorInExtended.Not)
			F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"EXT2","FLOAT","IIF(Trim(LMO) in ('M','L','O'),(Set_up * Cost)/Frequency2 + (Qty * Cost),0)")	
		f.Intrinsic.Control.Else	
			F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"EXT2","FLOAT","IIF(Trim(LMO) in ('M','L','O'),(Set_up * Cost)/Frequency2 + (Qty * Cost * WCFactor2),0)")
		f.Intrinsic.Control.EndIf	
		
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.If(v.Global.bIncludeWCFactorInExtended.Not)
			F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"EXT2","FLOAT","IIF(Trim(LMO) in ('M','O'),(Set_up * Cost)/Frequency2 + (Qty * Cost),IIF(LMO = 'L',IIF(Qty <> 0,(Set_up * Cost)/Frequency2 + (Cost/Qty),(Set_up * Cost)/Frequency2),0))")
		f.Intrinsic.Control.Else
			F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"EXT2","FLOAT","IIF(Trim(LMO) in ('M','O'),(Set_up * Cost)/Frequency2 + (Qty * Cost),IIF(LMO = 'L',IIF(Qty <> 0,(Set_up * Cost)/Frequency2 + (Cost * WCFactor2 / Qty),(Set_up * Cost)/Frequency2),0))")
		f.Intrinsic.Control.EndIf
			
	f.Intrinsic.Control.EndIf	
	
	F.Data.DataTable.AddColumn(v.Args.sTable,"Loc","String",v.Global.sLoc)
	F.Data.DataTable.AddColumn(v.Args.sTable,"Issue_UM","String","")
	F.Data.DataTable.AddColumn(v.Args.sTable,"Consump_Conv","Float",0)
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"Consump_Cost","Float","IIF(LMO <> 'M',Cost,IIF(Issue_UM <> '' and Consump_Conv > 0,Consump_Conv * Cost,Cost))")
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"Consump_Extended","Float","IIF(LMO <> 'M',Extended,Qty * Consump_Cost)")
	F.Data.DataTable.AddColumn(v.Args.sTable,"Weight","Float",0)
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"Consump_Weight","Float","IIF(LMO <> 'M',0,IIF(Issue_UM <> '' and Consump_Conv > 0,Consump_Conv * Weight,Weight))")
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"ExtendedWeight","Float","Weight * Qty")
	F.Data.DataTable.AddExpressionColumn(v.Args.sTable,"ExtendedConsumpWeight","Float","Consump_Weight * Qty")
	
	'Additional columns for Bom in CHILD table
	f.Data.DataTable.AddColumn(v.Args.sTable,"Insert_Bom","STRING","00")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Date_Maintenance","STRING","000000")	
	f.Data.DataTable.AddExpressionColumn(v.Args.sTable,"QUANTITY_6","Float","QTY")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Date_Start","STRING","000000")		
	f.Data.DataTable.AddColumn(v.Args.sTable,"Date_Stop","STRING","000000")
	f.Data.DataTable.AddColumn(v.Args.sTable,"BM_Serial_Start","STRING","")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"BM_Serial_Stop","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Purge_Flag","STRING","")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"ORDR_USR_FLAG","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"DRAWING","STRING","")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"Date_Last_Chg","STRING","00000000")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Time_Last_Chg","STRING","00000000")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"Last_Chg_By","STRING",v.Caller.User)
	f.Data.DataTable.AddColumn(v.Args.sTable,"Last_Chg_Prog","STRING","ESTIMATE")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"Drawing_Size","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"REQ_TRACE","STRING","")	
	f.Data.DataTable.AddColumn(v.Args.sTable,"Cost_Date","STRING","00000000")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Inactive","boolean",False)	
	f.Data.DataTable.AddColumn(v.Args.sTable,"Chg_Rev","Float",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"Setup_Qty","Float",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"DISPLAY_PART","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Shape","STRING","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"Serie","Long",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"Sort_Code","String","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"PhantomPart","String","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"RefPart","String","")
	f.Data.DataTable.AddColumn(v.Args.sTable,"SeqSort","Long",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"Lead","Float",0)
	f.Data.DataTable.AddColumn(v.Args.sTable,"PartID","String","")
	f.Data.DataTable.AddExpressionColumn(v.Args.sTable,"PartTrim2","String","Trim(Part)")
	f.Data.DataTable.AddColumn(v.Args.sTable,"MQD","Boolean",False)
	
	'Router field continued
	f.Data.DataTable.AddColumn(v.Args.sTable,"Amt_Minimum","Long",0)
	f.Data.DataTable.AddExpressionColumn(v.Args.sTable,"MinFlag","String","IIF(Amt_Minimum <> 0,'M','')")
	
	
f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Create_Child_Table.End

Program.Sub.Create_CutList_Table.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	f.Data.DataTable.AddTable("CHILD","CUTLIST")	
	
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","CUTLIST_ITEM","String","")
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","BParent","String","")
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","Part","String","")
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","LOCATION","String","")
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","PROPERTY_CODE","String","")
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","WORKCENTER","String","")
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","NEXT_WORKCTR","String","")
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","DRAWING_NO","String","")
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","TAG_NO","String","")
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","PIECES","FLOAT",0)
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","SCRAP_PERCENT","FLOAT",0)
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","EST_UM_UNITS","FLOAT",0)
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","USQL_2ND_UM_UNITS","FLOAT",0)
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","SELECT_CUTLIST","Boolean",False)	
	
	f.Data.DataTable.AddColumn("CHILD$CUTLIST","Serie","Long",0)
	
	f.Intrinsic.Control.If(v.DataTable.Temp_AddMaterial_CutList.Exists)
		f.Data.DataTable.Close("Temp_AddMaterial_CutList")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("Temp_AddMaterial_CutList",True)
	f.Data.DataTable.AddColumn("Temp_AddMaterial_CutList","UserID","String",v.Caller.User)
	f.Data.DataTable.AddColumn("Temp_AddMaterial_CutList","CCC","String",v.Caller.CompanyCode)
	f.Data.DataTable.AddColumn("Temp_AddMaterial_CutList","BParent","String","")
	f.Data.DataTable.AddColumn("Temp_AddMaterial_CutList","Part","String","")
	f.Data.DataTable.AddColumn("Temp_AddMaterial_CutList","Serie","Long",0)
		
f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Create_CutList_Table.End

Program.Sub.BuildV_Cutlist.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)	
		
	gui.Form.GGC_Bom.SetGridViewProperty("GV_CutList","AllowSort",False)
	gui.Form.GGC_Bom.SetGridviewProperty("GV_CutList","AllowColumnResizing",True)
	gui.Form.GGC_Bom.SetGridviewProperty("GV_CutList","OptionsViewColumnAutoWidth",False)
	
	GUI.Form.GGC_Bom.SetGridViewProperty("GV_CutList","OptionsSelectionEnableAppearanceFocusedRow",False)
	
	'headerfontbold	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","CUTLIST_ITEM","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","BParent","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Part","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","LOCATION","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PROPERTY_CODE","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","WORKCENTER","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","NEXT_WORKCTR","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","DRAWING_NO","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","TAG_NO","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PIECES","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SCRAP_PERCENT","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","EST_UM_UNITS","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","USQL_2ND_UM_UNITS","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Serie","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SELECT_CUTLIST","HeaderFontBold",True)
	
	'header wrap
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","CUTLIST_ITEM","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","BParent","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Part","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","LOCATION","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PROPERTY_CODE","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","WORKCENTER","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","NEXT_WORKCTR","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","DRAWING_NO","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","TAG_NO","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PIECES","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SCRAP_PERCENT","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","EST_UM_UNITS","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","USQL_2ND_UM_UNITS","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Serie","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SELECT_CUTLIST","HeaderWordWrap","Wrap")
		
	'Columns for Bom
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","CUTLIST_ITEM","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","BParent","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Part","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","LOCATION","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PROPERTY_CODE","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","WORKCENTER","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","NEXT_WORKCTR","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","DRAWING_NO","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","TAG_NO","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PIECES","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SCRAP_PERCENT","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","EST_UM_UNITS","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","USQL_2ND_UM_UNITS","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Serie","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SELECT_CUTLIST","HeaderVAlignment","Top")
		
	'header far
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","CUTLIST_ITEM","HeaderHAlignment","center")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","LOCATION","HeaderHAlignment","center")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PROPERTY_CODE","HeaderHAlignment","center")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","WORKCENTER","HeaderHAlignment","center")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","NEXT_WORKCTR","HeaderHAlignment","center")	
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PIECES","HeaderHAlignment","far")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SCRAP_PERCENT","HeaderHAlignment","far")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","EST_UM_UNITS","HeaderHAlignment","far")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","USQL_2ND_UM_UNITS","HeaderHAlignment","far")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Serie","HeaderHAlignment","far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SELECT_CUTLIST","HeaderHAlignment","center")
	
	'Cell	far
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","CUTLIST_ITEM","CellHAlignment","center")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","LOCATION","CellHAlignment","center")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PROPERTY_CODE","CellHAlignment","center")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","WORKCENTER","CellHAlignment","center")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","NEXT_WORKCTR","CellHAlignment","center")
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PIECES","CellHAlignment","far")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SCRAP_PERCENT","CellHAlignment","far")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","EST_UM_UNITS","CellHAlignment","far")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","USQL_2ND_UM_UNITS","CellHAlignment","far")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Serie","CellHAlignment","far")	
		
	'column width
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","CUTLIST_ITEM","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","CUTLIST_ITEM","MaxWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","BParent","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Part","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","LOCATION","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","LOCATION","MaxWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PROPERTY_CODE","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","WORKCENTER","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","NEXT_WORKCTR","MinWidth","45")
		
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","DRAWING_NO","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","TAG_NO","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PIECES","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SCRAP_PERCENT","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","EST_UM_UNITS","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","USQL_2ND_UM_UNITS","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Serie","MinWidth","45")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SELECT_CUTLIST","MinWidth","65")
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SELECT_CUTLIST","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SELECT_CUTLIST","ReadOnly",True)	
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Location","Visible",False)
	'gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","USQL_2ND_UM_UNITS","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Serie","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","BParent","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Part","Visible",False)		
	
	'DisplayCustomNumeric
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PIECES","DisplayCustomNumeric","###,###,###,##0.0000")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SCRAP_PERCENT","DisplayCustomNumeric","###,###,###,##0.0000")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","EST_UM_UNITS","DisplayCustomNumeric","###,###,###,##0.0000")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","USQL_2ND_UM_UNITS","DisplayCustomNumeric","###,###,###,##0.0000")	
	
	'Caption
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","CUTLIST_ITEM","Caption","Item")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","BParent","Caption","Router")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Part","Caption","Component")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","LOCATION","Caption","Locn")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PROPERTY_CODE","Caption","Prop. Code")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","WORKCENTER","Caption","WC")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","NEXT_WORKCTR","Caption","Next WC")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","DRAWING_NO","Caption","Drawing")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","TAG_NO","Caption","Tag")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","PIECES","Caption","Pieces")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SCRAP_PERCENT","Caption","Scrap %")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","EST_UM_UNITS","Caption","Est. Units")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","USQL_2ND_UM_UNITS","Caption","2nd E.U")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","Serie","Caption","Serie")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","SELECT_CUTLIST","Caption","Select Item")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CutList","USQL_2ND_UM_UNITS","Caption","Alt. Units")
	
f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry		
Program.Sub.BuildV_Cutlist.End

Program.Sub.Build_Required_Plus.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)
	v.Local.sDec.Declare
	v.Local.iCnt.Declare
	V.Local.sHead.Declare
	V.Local.sSupervsrID.Declare
	V.Local.sHold.Declare
	v.Local.bEx.Declare
	
	'MenuItemsCheck
	f.Intrinsic.Control.If(v.DataTable.MsgItemsCheck.Exists)
		F.Data.DataTable.Close("MsgItemsCheck")
	f.Intrinsic.Control.EndIf
	F.Data.DataTable.Create("MsgItemsCheck",True)
	f.Data.DataTable.AddColumn("MsgItemsCheck","Item","String","")
	f.Data.DataTable.AddColumn("MsgItemsCheck","Description","String","")
	f.Data.DataTable.AddColumn("MsgItemsCheck","Found","Boolean",False)	
	
	'dList
	f.Intrinsic.Control.If(v.DataTable.dList.Exists)
		F.Data.DataTable.Close("dList")
	f.Intrinsic.Control.EndIf	
	f.Data.DataTable.Create("dList",True)
	f.Data.DataTable.AddColumn("dList","Item","String","")
	f.Data.DataTable.AddColumn("dList","IsChecked","Long",0)
	f.Data.DataTable.AddColumn("dList","PrintOrder","Long",0)

	'Field Order
	F.Intrinsic.Control.If(v.DataTable.FieldOrder.Exists)
		F.Data.DataTable.Close("FieldOrder")
	F.Intrinsic.Control.EndIf	
	f.Data.Datatable.Create("FieldOrder")
	f.Data.DataTable.AddColumn("FieldOrder","NodeIndex","String","")	
	f.Data.DataTable.AddColumn("FieldOrder","Qty","String","")
	f.Data.DataTable.AddColumn("FieldOrder","Part","String","")
	f.Data.DataTable.AddColumn("FieldOrder","Description","String","")
	f.Data.DataTable.AddColumn("FieldOrder","UM","String","")
	f.Data.DataTable.AddColumn("FieldOrder","Source","String","")
	f.Data.DataTable.AddColumn("FieldOrder","Category","String","")
	f.Data.DataTable.AddColumn("FieldOrder","Cost","String","")
	f.Data.DataTable.AddColumn("FieldOrder","PL","String","")
	f.Data.DataTable.AddColumn("FieldOrder","Loc","String","")
	f.Data.DataTable.AddColumn("FieldOrder","Complete","String","")		

	gui.FieldOrder.gsFieldOrder.AddGridViewFromDatatable("GV_Ord","FieldOrder")

	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","NodeIndex","Caption","Node Index")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","NodeIndex","HeaderFontBold",True)
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Qty","HeaderFontBold",True)
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Part","HeaderFontBold",True)
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Description","HeaderFontBold",True)
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","UM","HeaderFontBold",True)
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Source","HeaderFontBold",True)
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Category","HeaderFontBold",True)
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Cost","HeaderFontBold",True)
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","PL","HeaderFontBold",True)
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Loc","HeaderFontBold",True)
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Complete","HeaderFontBold",True)
	
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","NodeIndex","HeaderHAlignment","center")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Qty","HeaderHAlignment","center")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Part","HeaderHAlignment","center")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Description","HeaderHAlignment","center")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","UM","HeaderHAlignment","center")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Source","HeaderHAlignment","center")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Category","HeaderHAlignment","center")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Cost","HeaderHAlignment","center")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","PL","HeaderHAlignment","center")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Loc","HeaderHAlignment","center")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Complete","HeaderHAlignment","center")


	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","NodeIndex","HeaderBackColor","Crimson")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Qty","HeaderBackColor","Coral")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Part","HeaderBackColor","DarkOrange")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Description","HeaderBackColor","DarkKhaki")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","UM","HeaderBackColor","Khaki")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Source","HeaderBackColor","DarkGreen")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Category","HeaderBackColor","DarkTurquoise")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Cost","HeaderBackColor","DodgerBlue")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","PL","HeaderBackColor","Indigo")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Complete","HeaderBackColor","MidnightBlue")
	
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","NodeIndex","HeaderForeColor","White")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Qty","HeaderForeColor","White")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Part","HeaderForeColor","White")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Description","HeaderForeColor","White")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","UM","HeaderForeColor","White")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Source","HeaderForeColor","White")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Category","HeaderForeColor","White")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Cost","HeaderForeColor","White")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","PL","HeaderForeColor","White")
	gui.FieldOrder.gsFieldOrder.SetColumnProperty("GV_ORD","Complete","HeaderForeColor","White")	
	
	gui.FieldOrder.gsFieldOrder.MainView("GV_Ord")
	
	'Decimal	
	F.Intrinsic.Control.If(v.DataTable.Decim.Exists)
		F.Data.DataTable.Close("Decim",True)
	F.Intrinsic.Control.EndIf	
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"RTRDECIMAL",4986,4001,6,"",V.Local.sDec)
	f.Intrinsic.Control.If(v.Local.sDec.Trim,<>,"")
		f.Data.DataTable.CreateFromString("Decim",v.Local.sDec,"Col*!*ColCap*!*Sign*!*LeadZero*!*Dec*!*Summary*!*SummaryLabel*!*SummarySign*!*SummaryLeadZero*!*SummaryDec","String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String*!*String","*!*","#$#",True)
	f.Intrinsic.Control.Else
		f.Data.Datatable.Create("Decim",True)
		f.Data.DataTable.AddColumn("Decim","Col","String","")
		f.Data.DataTable.AddColumn("Decim","ColCap","String","")
		f.Data.DataTable.AddColumn("Decim","Sign","String","")		
		f.Data.DataTable.AddColumn("Decim","LeadZero","String","")
		f.Data.DataTable.AddColumn("Decim","Dec","String","")		
		f.Data.DataTable.AddColumn("Decim","Summary","String","")
		f.Data.DataTable.AddColumn("Decim","SummaryLabel","String","")
		f.Data.DataTable.AddColumn("Decim","SummarySign","String","")
		f.Data.DataTable.AddColumn("Decim","SummaryLeadZero","String","")
		f.Data.DataTable.AddColumn("Decim","SummaryDec","String","")
		f.Intrinsic.Control.CallSub(Set_Default_RTRDecimal)		
	f.Intrinsic.Control.EndIf	
	
	Gui.DecimalRTR.gsDec.AddGridViewFromDatatable("GV_Decim","Decim")

	Gui.DecimalRTR.gsDec.ColumnEdit("GV_Decim","Dec","DropdownList","*!*.0*!*.00*!*.000*!*.0000*!*.00000*!*.000000")
	Gui.DecimalRTR.gsDec.ColumnEdit("GV_Decim","SummaryDec","DropdownList","*!*.0*!*.00*!*.000*!*.0000*!*.00000*!*.000000")
	Gui.DecimalRTR.gsDec.ColumnEdit("GV_Decim","LeadZero","DropdownList","#*!*0")
	Gui.DecimalRTR.gsDec.ColumnEdit("GV_Decim","SummaryLeadZero","DropdownList","#*!*0")
	'Unit sign dropdown
	F.Global.Security.GetUserID("SUPERVSR",v.Caller.CompanyCode,v.Local.sSupervsrID)
	f.Global.Registry.ReadValue(v.Local.sSupervsrID,V.Caller.CompanyCode,"UNITSIGN",4986,6001,5,"$,Lb,Oz,Kg,G",V.Local.sHold)	
	F.Intrinsic.String.Replace(V.Local.sHold,",","*!*",V.Local.sHold)	
	F.Intrinsic.String.Build("*!*{0}",V.Local.sHold,V.Local.sHold)	
	Gui.DecimalRTR.gsDec.ColumnEdit("GV_Decim","Sign","DropdownList",V.Local.sHold)
	
	'Summary
	'Make sure there is a space character trailing the value
	f.Intrinsic.String.Replace(v.Local.sHold.Trim,"*!*"," *!*",v.Local.sHold)
	f.Intrinsic.String.Build("{0} ",v.Local.sHold,v.Local.sHold)
	Gui.DecimalRTR.gsDec.ColumnEdit("GV_Decim","SummarySign","DropdownList",V.Local.sHold)	
	Gui.DecimalRTR.gsDec.ColumnEdit("GV_Decim","Summary","DropdownList","None*!*Average*!*Count*!*Max*!*Min*!*Sum")	
	Gui.DecimalRTR.gsDec.ColumnEdit("GV_Decim","SummaryLabel","DropdownList","*!*Avg *!*Ct *!*Max *!*Min *!*Tot ")	
	
	Gui.DecimalRTR.gsDec.SetGridViewProperty("GV_Decim","ColumnPanelRowHeight","35")
	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Col","Caption","Column")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","ColCap","Caption","Column Caption")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","LeadZero","Caption","Zero")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Dec","Caption","Decimal")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Sign","Caption","Sign")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Summary","Caption","Summary")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLabel","Caption","Summary Label")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummarySign","Caption","Summary Sign")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLeadZero","Caption","Summary Zero")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryDec","Caption","Summary Decimal")		
	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Col","CellFontBold",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","ColCap","CellFontBold",True)
	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Col","HeaderFontBold",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","ColCap","HeaderFontBold",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","LeadZero","HeaderFontBold",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Dec","HeaderFontBold",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Sign","HeaderFontBold",True)	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Summary","HeaderFontBold",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLabel","HeaderFontBold",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummarySign","HeaderFontBold",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLeadZero","HeaderFontBold",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryDec","HeaderFontBold",True)	
	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Col","HeaderWordWrap","Wrap")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","ColCap","HeaderWordWrap","Wrap")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","LeadZero","HeaderWordWrap","Wrap")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Dec","HeaderWordWrap","Wrap")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Sign","HeaderWordWrap","Wrap")	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Summary","HeaderWordWrap","Wrap")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLabel","HeaderWordWrap","Wrap")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummarySign","HeaderWordWrap","Wrap")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLeadZero","HeaderWordWrap","Wrap")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryDec","HeaderWordWrap","Wrap")	

	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Col","HeaderVAlignment","Top")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","ColCap","HeaderVAlignment","Top")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","LeadZero","HeaderVAlignment","Top")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Dec","HeaderVAlignment","Top")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Sign","HeaderVAlignment","Top")	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Summary","HeaderVAlignment","Top")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLabel","HeaderVAlignment","Top")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummarySign","HeaderVAlignment","Top")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLeadZero","HeaderVAlignment","Top")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryDec","HeaderVAlignment","Top")
	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","LeadZero","AllowEdit",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Dec","AllowEdit",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Sign","AllowEdit",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Summary","AllowEdit",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLabel","AllowEdit",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummarySign","AllowEdit",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLeadZero","AllowEdit",True)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryDec","AllowEdit",True)		
	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","LeadZero","ReadOnly",False)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Dec","ReadOnly",False)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Sign","ReadOnly",False)	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Summary","ReadOnly",False)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLabel","ReadOnly",False)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummarySign","ReadOnly",False)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLeadZero","ReadOnly",False)
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryDec","ReadOnly",False)	
	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Col","MinWidth","160")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","ColCap","MinWidth","150")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","LeadZero","MinWidth","50")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Dec","MinWidth","50")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Sign","MinWidth","50")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Summary","MinWidth","50")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLabel","MinWidth","50")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummarySign","MinWidth","50")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLeadZero","MinWidth","50")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryDec","MinWidth","50")
	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","LeadZero","HeaderHAlignment","center")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Dec","HeaderHAlignment","far")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Sign","HeaderHAlignment","center")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Summary","HeaderHAlignment","center")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLabel","HeaderHAlignment","center")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummarySign","HeaderHAlignment","center")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLeadZero","HeaderHAlignment","center")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryDec","HeaderHAlignment","far")
	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","LeadZero","CellHAlignment","center")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Dec","CellHAlignment","far")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Sign","CellHAlignment","center")	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Summary","CellHAlignment","center")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLabel","CellHAlignment","center")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummarySign","CellHAlignment","center")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryLeadZero","CellHAlignment","center")
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","SummaryDec","CellHAlignment","far")	
	
	Gui.DecimalRTR.gsDec.SetColumnProperty("GV_Decim","Col","Visible",False)	
	
	Gui.DecimalRTR.gsDec.Mainview("GV_Decim")
	
	'Standard Color
	f.Intrinsic.Control.If(v.DataTable.StdColor.Exists)
		f.Intrinsic.Control.close("StdColor")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromString("StdColor","AliceBlue,#F0F8FF#$#AntiqueWhite,#FAEBD7#$#Aqua,#00FFFF#$#Aquamarine,#7FFFD4#$#Azure,#F0FFFF#$#Beige,#F5F5DC#$#Bisque,#FFE4C4#$#Black,#000000#$#BlanchedAlmond,#FFEBCD#$#Blue,#0000FF#$#BlueViolet,#8A2BE2#$#Brown,#A52A2A#$#BurlyWood,#DEB887#$#CadetBlue,#5F9EA0#$#Chartreuse,#7FFF00#$#Chocolate,#D2691E#$#Coral,#FF7F50#$#CornflowerBlue,#6495ED#$#Cornsilk,#FFF8DC#$#Crimson,#DC143C#$#Cyan,#00FFFF#$#DarkBlue,#00008B#$#DarkCyan,#008B8B#$#DarkGoldenRod,#B8860B#$#DarkGray,#A9A9A9#$#DarkGreen,#006400#$#DarkKhaki,#BDB76B#$#DarkMagenta,#8B008B#$#DarkOliveGreen,#556B2F#$#DarkOrange,#FF8C00#$#DarkOrchid,#9932CC#$#DarkRed,#8B0000#$#DarkSalmon,#E9967A#$#DarkSeaGreen,#8FBC8F#$#DarkSlateBlue,#483D8B#$#DarkSlateGray,#2F4F4F#$#DarkTurquoise,#00CED1#$#DarkViolet,#9400D3#$#DeepPink,#FF1493#$#DeepSkyBlue,#00BFFF#$#DimGray,#696969#$#DodgerBlue,#1E90FF#$#FireBrick,#B22222#$#FloralWhite,#FFFAF0#$#ForestGreen,#228B22#$#Fuchsia,#FF00FF#$#Gainsboro,#DCDCDC#$#GhostWhite,#F8F8FF#$#Gold,#FFD700#$#GoldenRod,#DAA520#$#Gray,#808080#$#Green,#008000#$#GreenYellow,#ADFF2F#$#HoneyDew,#F0FFF0#$#HotPink,#FF69B4#$#IndianRed,#CD5C5C#$#Indigo,#4B0082#$#Ivory,#FFFFF0#$#Khaki,#F0E68C#$#Lavender,#E6E6FA#$#LavenderBlush,#FFF0F5#$#LawnGreen,#7CFC00#$#LemonChiffon,#FFFACD#$#LightBlue,#ADD8E6#$#LightCoral,#F08080#$#LightCyan,#E0FFFF#$#LightGoldenRodYellow,#FAFAD2#$#LightGray,#D3D3D3#$#LightGreen,#90EE90#$#LightPink,#FFB6C1#$#LightSalmon,#FFA07A#$#LightSeaGreen,#20B2AA#$#LightSkyBlue,#87CEFA#$#LightSlateGray,#778899#$#LightSteelBlue,#B0C4DE#$#LightYellow,#FFFFE0#$#Lime,#00FF00#$#LimeGreen,#32CD32#$#Linen,#FAF0E6#$#Magenta,#FF00FF#$#Maroon,#800000#$#MediumAquaMarine,#66CDAA#$#MediumBlue,#0000CD#$#MediumOrchid,#BA55D3#$#MediumPurple,#9370DB#$#MediumSeaGreen,#3CB371#$#MediumSlateBlue,#7B68EE#$#MediumSpringGreen,#00FA9A#$#MediumTurquoise,#48D1CC#$#MediumVioletRed,#C71585#$#MidnightBlue,#191970#$#MintCream,#F5FFFA#$#MistyRose,#FFE4E1#$#Moccasin,#FFE4B5#$#NavajoWhite,#FFDEAD#$#Navy,#000080#$#OldLace,#FDF5E6#$#Olive,#808000#$#OliveDrab,#6B8E23#$#Orange,#FFA500#$#OrangeRed,#FF4500#$#Orchid,#DA70D6#$#PaleGoldenRod,#EEE8AA#$#PaleGreen,#98FB98#$#PaleTurquoise,#AFEEEE#$#PaleVioletRed,#DB7093#$#PapayaWhip,#FFEFD5#$#PeachPuff,#FFDAB9#$#Peru,#CD853F#$#Pink,#FFC0CB#$#Plum,#DDA0DD#$#PowderBlue,#B0E0E6#$#Purple,#663399#$#Red,#FF0000#$#RosyBrown,#BC8F8F#$#RoyalBlue,#4169E1#$#SaddleBrown,#8B4513#$#Salmon,#FA8072#$#SandyBrown,#F4A460#$#SeaGreen,#2E8B57#$#SeaShell,#FFF5EE#$#Sienna,#A0522D#$#Silver,#C0C0C0#$#SkyBlue,#87CEEB#$#SlateBlue,#6A5ACD#$#SlateGray,#708090#$#Snow,#FFFAFA#$#SpringGreen,#00FF7F#$#SteelBlue,#4682B4#$#Tan,#D2B48C#$#Teal,#008080#$#Thistle,#D8BFD8#$#Tomato,#FF6347#$#Turquoise,#40E0D0#$#Violet,#EE82EE#$#Wheat,#F5DEB3#$#White,#FFFFFF#$#WhiteSmoke,#F5F5F5#$#Yellow,#FFFF00#$#YellowGreen,#9ACD32","Name*!*Code","String*!*String",",","#$#",True)
	
	f.Data.DataTable.AddColumn("StdColor","Select","String","Select")
	gui.StdColor.gsColor.AddGridViewFromDatatable("GV_Color","StdColor")
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.StdColor.RowCount--,1)
		gui.StdColor.gsColor.SetRowAppearance("GV_Color",v.Local.iCnt, "BackColor",v.DataTable.StdColor(v.Local.iCnt).Name!FieldValString) 
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	gui.StdColor.gsColor.SetGridViewProperty("GV_Color","OptionsViewShowAutoFilterRow",True)
	
	gui.StdColor.gsColor.SetColumnProperty("GV_Color","Code","Visible","False")
	
	gui.StdColor.gsColor.SetColumnProperty("Gv_color","Name","AllowEdit",False)
	gui.StdColor.gsColor.SetColumnProperty("Gv_color","Name","ReadOnly",True)
	gui.StdColor.gsColor.SetColumnProperty("Gv_color","Code","AllowEdit",False)
	gui.StdColor.gsColor.SetColumnProperty("Gv_color","Code","ReadOnly",True)
	
	gui.StdColor.gsColor.SetColumnProperty("Gv_color","Select","AllowEdit",False)
	gui.StdColor.gsColor.SetColumnProperty("Gv_color","Select","ReadOnly",True)
	
	gui.StdColor.gsColor.SetColumnProperty("Gv_color","Select","MinWidth","60")
	gui.StdColor.gsColor.SetColumnProperty("Gv_color","Select","MaxWidth","60")

	gui.StdColor.gsColor.ColumnEdit("Gv_color","Select","editorbutton","Select")
	gui.StdColor.gsColor.MainView("GV_Color")
	
	'Standard Font
	f.Intrinsic.Control.If(v.DataTable.StdFont.Exists)
		f.Intrinsic.Control.close("StdFont")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromString("StdFont","Abadi MT Condensed,Agency FB,Aharoni,Aldhabi,Algerian,Almanac MT,American Uncial,Andale Mono,Andalus,Andy,AngsanaUPC,Angsana New,Aparajita,Arabic Transparent,Arabic Typesetting,Arial,Arial Black,Arial Narrow,Arial Narrow Special,Arial Nova,Arial Rounded MT,Arial Special,Arial Unicode MS,Augsburger Initials,Avenir Next LT Pro,Bahnschrift,Baskerville Old Face,Batang & BatangChe,Bauhaus 93,Beesknees ITC,Bell MT,Bembo,Berlin Sans FB,Bernard MT Condensed,Bickley Script,Biome,BIZ UDGothic,BIZ UDMincho Medium,Blackadder ITC,Bodoni MT,Bodoni MT Condensed,Bon Apetit MT,Bookman Old Style,Bookshelf Symbol,Book Antiqua,Bradley Hand ITC,Braggadocio,BriemScript,Britannic Bold,Broadway,BrowalliaUPC,Browallia New,Brush Script MT,Calibri,Californian FB,Calisto MT,Cambria,Cambria Math,Candara,Cariadings,Castellar,Cavolini,Centaur,Century,Century Gothic,Century Schoolbook,Chiller,Colonna MT,Comic Sans MS,Consolas,Constantia,Contemporary Brush,Cooper Black,Copperplate Gothic,Corbel,CordiaUPC,Cordia New,Courier New,Curlz MT,Dante,DaunPenh,David,Daytona,DengXian,Desdemona,DFKai-SB,DilleniaUPC,Directions MT,DokChampa,Dotum & DotumChe,Ebrima,Eckmann,Edda,Edwardian Script ITC,Elephant,Engravers MT,Enviro,Eras ITC,Estrangelo Edessa,EucrosiaUPC,Euphemia,Eurostile,FangSong,Felix Titling,Fine Hand,Fixed Miriam Transparent,Flexure,Footlight MT,Forte,Franklin Gothic,Franklin Gothic Medium,FrankRuehl,FreesiaUPC,Freestyle Script,French Script MT,Futura,Gabriola,Gadugi,Garamond,Garamond MT,Gautami,Georgia,Georgia Pro,Georgia Ref,Gigi,Gill Sans MT,Gill Sans MT Condensed,Gill Sans Nova,Gisha,Gloucester,Goudy Old Style,Goudy Stout,Gradl,Grotesque,Gulim & GulimChe,Gungsuh & GungsuhChe,Hadassah Friedlaender,Haettenschweiler,Harlow Solid Italic,Harrington,HGGothicE,HGMinchoE,HGSoeiKakugothicUB,High Tower Text,Holidays MT,HoloLens MDL2 Assets,Impact,Imprint MT Shadow,Informal Roman,Ink Free,IrisUPC,Iskoola Pota,JasmineUPC,Javanese Text,Jokerman,Juice ITC,KaiTi,Kalinga,Kartika,Keystrokes MT,Khmer UI,Kino MT,KodchiangUPC,Kokila,Kristen ITC,Kunstler Script,Lao UI,Latha,LCD,Leelawadee,Leelawadee UI,Levenim MT,LilyUPC,Lucida Blackletter,Lucida Bright,Lucida Bright Math,Lucida Calligraphy,Lucida Console,Lucida Fax,Lucida Handwriting,Lucida Sans,Lucida Sans Typewriter,Lucida Sans Unicode,Magneto,Maiandra GD,Malgun Gothic,Mangal,Map Symbols,Marlett,Matisse ITC,Matura MT Script Capitals,McZee,Mead Bold,Meiryo,Mercurius Script MT Bold,Microsoft GothicNeo,Microsoft Himalaya,Microsoft JhengHei,Microsoft New Tai Lue,Microsoft PhagsPa,Microsoft Sans Serif,Microsoft Tai Le,Microsoft Uighur,Microsoft YaHei,Microsoft Yi Baiti,MingLiU,Minion Web,Miriam,Miriam Fixed,Mistral,Modern Love,Modern No. 20,Mongolian Baiti,Monotype.com,Monotype Corsiva,Monotype Sorts,MoolBoran,MS Gothic,MS LineDraw,MS Mincho,MS Outlook,MS PGothic,MS PMincho,MS Reference,MS UI Gothic,MT Extra,MV Boli,Myanmar Text,Narkisim,Neue Haas Grotesk Text Pro,News Gothic MT,New Caledonia,Niagara,Nirmala UI,Nyala,OCR-B-Digits,OCRB,OCR A Extended,Old English Text MT,Onyx,Palace Script MT,Palatino Linotype,Papyrus,Parade,Parchment,Parties MT,Peignot Medium,Pepita MT,Perpetua,Perpetua Titling MT,Placard Condensed,Plantagenet Cherokee,Playbill,Poor Richard,Posterama,Pristina,Quire Sans,Raavi,Rage Italic,Ransom,Ravie,RefSpecialty,Rockwell,Rockwell Nova,Rod,Runic MT Condensed,Sabon Next LT,Sagona,Sakkal Majalla,Sanskrit Text,Script MT Bold,Segoe Chess,Segoe MDL2 Assets,Segoe Print,Segoe Script,Segoe UI,Segoe UI Emoji,Segoe UI Historic,Segoe UI Symbol,Selawik,Shonar Bangla,Showcard Gothic,Shruti,Signs MT,SimHei,Simplified Arabic Fixed,SimSun,Sitka,Snap ITC,Sports MT,STCaiyun,Stencil,STFangsong,STHupo,STKaiti,Stop,STXihei,STXingkai,STXinwei,STZhongsong,Sylfaen,Symbol,Tahoma,Tempo Grunge,Tempus Sans ITC,Temp Installer Font,The Hand,The Serif Hand,Times New Roman,Times New Roman Special,Tisa Offc Serif Pro,Traditional Arabic,Transport MT,Trebuchet MS,Tunga,Tw Cen MT,UD Digi Kyokasho,Univers,Urdu Typesetting,Utsaah,Vacation MT,Vani,Verdana,Verdana Pro,Verdana Ref,Vijaya,Viner Hand ITC,Vivaldi,Vixar ASCI,Vladimir Script,Vrinda,Walbaum,Webdings,Westminster,Wide Latin,Wingdings,Yu Gothic,Yu Mincho","Name","String",",",",",True)
	
	f.Data.DataTable.AddColumn("StdFont","Select","String","Select")
	
	gui.StdFont.gsFont.AddGridViewFromDatatable("GV_Font","StdFont")	
	
	gui.StdFont.gsFont.SetGridViewProperty("GV_Font","OptionsViewShowAutoFilterRow",True)
	
	gui.StdFont.gsFont.ColumnEdit("GV_Font","Select","editorbutton","Select")
	
	gui.StdFont.gsFont.SetColumnProperty("GV_Font","Select","AllowEdit",False)
	gui.StdFont.gsFont.SetColumnProperty("GV_Font","Select","ReadOnly",True)
	
	gui.StdFont.gsFont.SetColumnProperty("GV_Font","Select","MinWidth","60")	
	gui.StdFont.gsFont.SetColumnProperty("GV_Font","Select","MaxWidth","60")	
	
	
	gui.StdFont.gsFont.MainView("GV_Font")	
	
	'Router Format Settings
	F.Intrinsic.Control.If(v.DataTable.RTRGridFormat.Exists)
		F.Data.DataTable.Close("RTRGridFormat",True)
	F.Intrinsic.Control.EndIf	
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"RTRGRIDFORMAT",4986,5001,6,"",V.Local.sHead)
	
	f.Intrinsic.Control.If(v.Local.sHead.Trim,<>,"")
		f.Data.DataTable.CreateFromString("RTRGridFormat",v.Local.sHead,"Col*!*OrigCap*!*Caption*!*ToolTip*!*HeaderBackColor*!*HeaderForeColor*!*HeaderFontSize*!*HeaderFontBold*!*HeaderFontItalic*!*HeaderFontUnderLine*!*CellFontName*!*CellFontSize*!*CellFontBold*!*CellFontItalic*!*CellFontUnderLine*!*CellFontStrikeOut*!*CellTrimming","String*!*String*!*String*!*String*!*String*!*String*!*String*!*Boolean*!*Boolean*!*Boolean*!*String*!*String*!*Boolean*!*Boolean*!*Boolean*!*Boolean*!*Boolean","*!*!~!","#$#~%",True)
	f.Intrinsic.Control.Else
		f.Data.Datatable.Create("RTRGridFormat",True)
		f.Data.DataTable.AddColumn("RTRGridFormat","Col","String","")
		f.Data.DataTable.AddColumn("RTRGridFormat","OrigCap","String","")
		f.Data.DataTable.AddColumn("RTRGridFormat","Caption","String","")		
		f.Data.DataTable.AddColumn("RTRGridFormat","ToolTip","String","")			
		
		f.Data.DataTable.AddColumn("RTRGridFormat","HeaderBackColor","String","")
		f.Data.DataTable.AddColumn("RTRGridFormat","HeaderForeColor","String","")		
		f.Data.DataTable.AddColumn("RTRGridFormat","HeaderFontSize","String","")
		
		f.Data.DataTable.AddColumn("RTRGridFormat","HeaderFontBold","Boolean","False")			
		f.Data.DataTable.AddColumn("RTRGridFormat","HeaderFontItalic","Boolean","False")
		f.Data.DataTable.AddColumn("RTRGridFormat","HeaderFontUnderLine","Boolean","False")
		
		f.Data.DataTable.AddColumn("RTRGridFormat","CellFontName","String","")		
		f.Data.DataTable.AddColumn("RTRGridFormat","CellFontSize","String","")	
		
		f.Data.DataTable.AddColumn("RTRGridFormat","CellFontBold","Boolean","False")		
		f.Data.DataTable.AddColumn("RTRGridFormat","CellFontItalic","Boolean","False")		
		f.Data.DataTable.AddColumn("RTRGridFormat","CellFontUnderLine","Boolean","False")
		f.Data.DataTable.AddColumn("RTRGridFormat","CellFontStrikeOut","Boolean","False")
		f.Data.DataTable.AddColumn("RTRGridFormat","CellTrimming","Boolean","False")		
		
		f.Intrinsic.Control.CallSub(Set_Default_RTRGridFormat)
		
	f.Intrinsic.Control.EndIf	
	
	Gui.RTRGridFormat.gsRTRGridFormat.AddGridViewFromDatatable("GV_RTRGridFormat","RTRGridFormat")

	Gui.RTRGridFormat.gsRTRGridFormat.SetGridViewProperty("GV_RTRGridFormat","OptionsSelectionEnableAppearanceFocusedRow",False)
	Gui.RTRGridFormat.gsRTRGridFormat.SetGridViewProperty("GV_RTRGridFormat","ColumnPanelRowHeight","35")
	Gui.RTRGridFormat.gsRTRGridFormat.SetGridViewProperty("GV_RTRGridFormat","OptionsViewShowAutoFilterRow",True)

	Gui.RTRGridFormat.gsRTRGridFormat.ColumnEdit("GV_RTRGridFormat","HeaderFontSize","DropdownList","6.00*!*6.25*!*6.50*!*6.75*!*7.00*!*7.25*!*7.50*!*7.75*!*8.00*!*8.25*!*8.50*!*8.75*!*9.00*!*9.25*!*9.50*!*9.75*!*10.00*!*10.25*!*10.50*!*10.75*!*11.00*!*11.25*!*11.50*!*11.75*!*12.00")
	Gui.RTRGridFormat.gsRTRGridFormat.ColumnEdit("GV_RTRGridFormat","CellFontSize","DropdownList","6.00*!*6.25*!*6.50*!*6.75*!*7.00*!*7.25*!*7.50*!*7.75*!*8.00*!*8.25*!*8.50*!*8.75*!*9.00*!*9.25*!*9.50*!*9.75*!*10.00*!*10.25*!*10.50*!*10.75*!*11.00*!*11.25*!*11.50*!*11.75*!*12.00")		
		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Col","Caption","Column")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","OrigCap","Caption","Original Header Caption")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Caption","Caption","Current Header Caption")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","ToolTip","Caption","ToolTip")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderBackColor","Caption","Header Back Color")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderForeColor","Caption","Header Fore Color")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontBold","Caption","Header Font Bold")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontSize","Caption","Header Font Size")	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontItalic","Caption","Header Font Italic")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontUnderLine","Caption","Header Font UnderLine")		
	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontName","Caption","Cell Font Name")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontSize","Caption","Cell Font Size")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontBold","Caption","Cell Font Bold")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontItalic","Caption","Cell Font Italic")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontUnderLine","Caption","Cell Font UnderLine")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontStrikeOut","Caption","Cell Font Strike Out")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellTrimming","Caption","Cell Trimming")	
	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","OrigCap","CellFontBold ","True")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Caption","CellFontBold ","True")		
	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Col","HeaderFontBold",True)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","OrigCap","HeaderFontBold",True)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Caption","HeaderFontBold",True)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","ToolTip","HeaderFontBold",True)	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderBackColor","HeaderFontBold",True)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderForeColor","HeaderFontBold",True)	

	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontBold","HeaderFontBold",True)	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontSize","HeaderFontBold",True)	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontItalic","HeaderFontBold",True)	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontUnderLine","HeaderFontBold",True)

	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontName","HeaderFontBold",True)		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontSize","HeaderFontBold",True)		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontBold","HeaderFontBold",True)		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontItalic","HeaderFontBold",True)		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontUnderLine","HeaderFontBold",True)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontStrikeOut","HeaderFontBold",True)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellTrimming","HeaderFontBold",True)	
		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Col","HeaderWordWrap","Wrap")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","OrigCap","HeaderWordWrap","Wrap")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Caption","HeaderWordWrap","Wrap")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","ToolTip","HeaderWordWrap","Wrap")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontBold","HeaderWordWrap","Wrap")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontSize","HeaderWordWrap","Wrap")	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderBackColor","HeaderWordWrap","Wrap")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderForeColor","HeaderWordWrap","Wrap")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontItalic","HeaderWordWrap","Wrap")	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontUnderLine","HeaderWordWrap","Wrap")

	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontName","HeaderWordWrap","Wrap")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontSize","HeaderWordWrap","Wrap")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontBold","HeaderWordWrap","Wrap")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontItalic","HeaderWordWrap","Wrap")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontUnderLine","HeaderWordWrap","Wrap")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontStrikeOut","HeaderWordWrap","Wrap")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellTrimming","HeaderWordWrap","Wrap")	
		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Col","HeaderVAlignment","Top")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","OrigCap","HeaderVAlignment","Top")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Caption","HeaderVAlignment","Top")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderBackColor","HeaderVAlignment","Top")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderForeColor","HeaderVAlignment","Top")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontItalic","HeaderVAlignment","Top")	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontUnderLine","HeaderVAlignment","Top")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","ToolTip","HeaderVAlignment","Top")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontBold","HeaderVAlignment","Top")	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontSize","HeaderVAlignment","Top")

	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontName","HeaderVAlignment","Top")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontSize","HeaderVAlignment","Top")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontBold","HeaderVAlignment","Top")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontItalic","HeaderVAlignment","Top")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontUnderLine","HeaderVAlignment","Top")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontStrikeOut","HeaderVAlignment","Top")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellTrimming","HeaderVAlignment","Top")			
	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Caption","AllowEdit",True)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderBackColor","AllowEdit",False)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderForeColor","AllowEdit",False)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontItalic","AllowEdit",False)	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontUnderLine","AllowEdit",False)	

	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","ToolTip","AllowEdit",True)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontBold","AllowEdit",False)	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontSize","AllowEdit",True)	

	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontName","AllowEdit",False)		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontSize","AllowEdit",True)		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontBold","AllowEdit",False)		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontItalic","AllowEdit",False)		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontUnderLine","AllowEdit",False)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontStrikeOut","AllowEdit",False)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellTrimming","AllowEdit",False)		
	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Caption","ReadOnly",False)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderBackColor","ReadOnly",True)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderForeColor","ReadOnly",True)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontItalic","ReadOnly",True)	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontUnderLine","ReadOnly",True)	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","ToolTip","ReadOnly",False)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontBold","ReadOnly",True)	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontSize","ReadOnly",False)

	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontName","ReadOnly",True)		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontSize","ReadOnly",False)		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontBold","ReadOnly",True)		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontItalic","ReadOnly",True)		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontUnderLine","ReadOnly",True)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontStrikeOut","ReadOnly",True)
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellTrimming","ReadOnly",True)	
	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Col","MinWidth","160")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","OrigCap","MinWidth","120")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Caption","MinWidth","120")	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderBackColor","MinWidth","80")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderForeColor","MinWidth","80")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontItalic","MinWidth","70")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontUnderLine","MinWidth","80")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","ToolTip","MinWidth","80")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontBold","MinWidth","70")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontSize","MinWidth","60")

	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontName","MinWidth","70")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontSize","MinWidth","70")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontBold","MinWidth","70")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontItalic","MinWidth","70")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontUnderLine","MinWidth","70")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontStrikeOut","MinWidth","70")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellTrimming","MinWidth","70")	
	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontItalic","HeaderHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontUnderLine","HeaderHAlignment","center")
	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderBackColor","HeaderHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderForeColor","HeaderHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontName","HeaderHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontSize","HeaderHAlignment","center")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontBold","HeaderHAlignment","center")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontItalic","HeaderHAlignment","center")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontUnderLine","HeaderHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontStrikeOut","HeaderHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellTrimming","HeaderHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontBold","HeaderHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontSize","HeaderHAlignment","center")	
	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderBackColor","CellHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderForeColor","CellHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontName","CellHAlignment","center")	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontItalic","CellHAlignment","center")	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontUnderLine","CellHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontSize","CellHAlignment","center")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontBold","CellHAlignment","center")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontItalic","CellHAlignment","center")		
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontUnderLine","CellHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellFontStrikeOut","CellHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","CellTrimming","CellHAlignment","center")	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontBold","CellHAlignment","center")
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","HeaderFontSize","CellHAlignment","center")		
	
	gui.RTRGridFormat.gsRTRGridFormat.SetColumnProperty("GV_RTRGridFormat","Col","Visible",False)		

	F.Intrinsic.Control.CallSub(Set_CellFormat)
	
	Gui.RTRGridFormat.gsRTRGridFormat.Mainview("GV_RTRGridFormat")
		
f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Build_Required_Plus.End

Program.Sub.Set_Default_RTRDecimal.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	'Set Default Decimal
	f.Data.DataTable.AddRow("Decim","Col","Set_Up","ColCap","Set Up","LeadZero","#","Dec",".0000","Summary","None","SummaryLabel","","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","Frequency","ColCap","Frequency","LeadZero","#","Dec",".0000","Summary","None","SummaryLabel","","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","Consump_Weight","ColCap","Unit Consump. Weight","LeadZero","#","Dec",".0000","Summary","None","SummaryLabel","","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","Weight","ColCap","Unt. Weight","LeadZero","#","Dec",".0000","Summary","None","SummaryLabel","","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","ExtendedWeight","ColCap","Extended Weight","LeadZero","#","Dec",".0000","Summary","Sum","SummaryLabel","Tot ","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","ExtendedConsumpWeight","ColCap","Extended Consump. Weight","LeadZero","#","Dec",".0000","Summary","Sum","SummaryLabel","Tot ","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","Qty","ColCap","Quantity /Runtime","LeadZero","#","Dec",".0000","Summary","None","SummaryLabel","","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","Consump_Extended","ColCap","Consump. Extended","LeadZero","#","Dec",".0000","Summary","Sum","SummaryLabel","Tot ","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","Consump_Cost","ColCap","Consump. Cost","LeadZero","#","Dec",".0000","Summary","None","SummaryLabel","","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","Consump_Conv","ColCap","Consump. Conversion","LeadZero","#","Dec",".0000","Summary","None","SummaryLabel","","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","Cost","ColCap","Cost","LeadZero","#","Dec",".0000","Summary","None","SummaryLabel","","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","Purchase_Factor","ColCap","Purchase Conversion","LeadZero","#","Dec",".0000","Summary","None","SummaryLabel","","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","Purch_Cost","ColCap","Purchase Cost","LeadZero","#","Dec",".0000","Summary","None","SummaryLabel","","SummarySign","","SummaryLeadZero","#","SummaryDec",".0000")
	f.Data.DataTable.AddRow("Decim","Col","Extended","ColCap","Extended","LeadZero","#","Dec",".0000","Summary","Sum","SummaryLabel","Tot ","SummarySign","$ ","SummaryLeadZero","#","SummaryDec",".0000")

f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Set_Default_RTRDecimal.End

Program.Sub.Set_CellFormat.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)
	v.Local.iCnt.Declare
	V.Local.sHead.Declare
	v.Local.sOrigCap.Declare
	v.Local.sCaption.Declare
	v.Local.sHeaderBackColor.Declare
	V.Local.sHeaderForeColor.Declare
	V.Local.sCellFontName.Declare
	
	gui.RTRGridFormat.gsRTRGridFormat.GetColumnIndexByName("GV_RTRGridFormat","OrigCap",V.Local.sOrigCap)
	gui.RTRGridFormat.gsRTRGridFormat.GetColumnIndexByName("GV_RTRGridFormat","Caption",V.Local.sCaption)
	
	gui.RTRGridFormat.gsRTRGridFormat.GetColumnIndexByName("GV_RTRGridFormat","HeaderBackColor",V.Local.sHeaderBackColor)	
	gui.RTRGridFormat.gsRTRGridFormat.GetColumnIndexByName("GV_RTRGridFormat","HeaderForeColor",V.Local.sHeaderForeColor)
	gui.RTRGridFormat.gsRTRGridFormat.GetColumnIndexByName("GV_RTRGridFormat","CellFontName",V.Local.sCellFontName)
	
	
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.RTRGridFormat.RowCount--,1)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sOrigCap,v.Local.iCnt,"BackColor",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderBackColor!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sOrigCap,v.Local.iCnt,"ForeColor",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderForeColor!FieldValsTring)
		
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCaption,v.Local.iCnt, "BackColor",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderBackColor!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCaption,v.Local.iCnt, "ForeColor",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderForeColor!FieldValsTring)

		
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sOrigCap,v.Local.iCnt, "FontItalic",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderFontItalic!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sOrigCap,v.Local.iCnt, "FontUnderLine",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderFontUnderLine!FieldValsTring)
		
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCaption,v.Local.iCnt, "FontItalic",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderFontItalic!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCaption,v.Local.iCnt, "FontUnderLine",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderFontUnderLine!FieldValsTring)
		
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCaption,v.Local.iCnt, "FontBold",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderFontBold!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCaption,v.Local.iCnt, "FontSize",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderFontSize!FieldValsTring)
	
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sOrigCap,v.Local.iCnt, "FontBold",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderFontBold!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sOrigCap,v.Local.iCnt, "FontSize",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderFontSize!FieldValsTring)	
	
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sHeaderBackColor,v.Local.iCnt, "BackColor",v.DataTable.RTRGridFormat(v.Local.iCnt).OrigCap!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sHeaderBackColor,v.Local.iCnt, "BackColor",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderBackColor!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sHeaderForeColor,v.Local.iCnt, "ForeColor",v.DataTable.RTRGridFormat(v.Local.iCnt).HeaderForeColor!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCellFontName,v.Local.iCnt, "FontName",v.DataTable.RTRGridFormat(v.Local.iCnt).CellFontName!FieldValsTring)
	
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCellFontName,v.Local.iCnt, "FontSize",v.DataTable.RTRGridFormat(v.Local.iCnt).CellFontSize!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCellFontName,v.Local.iCnt, "FontBold",v.DataTable.RTRGridFormat(v.Local.iCnt).CellFontBold!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCellFontName,v.Local.iCnt, "FontItalic",v.DataTable.RTRGridFormat(v.Local.iCnt).CellFontItalic!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCellFontName,v.Local.iCnt, "FontUnderLine",v.DataTable.RTRGridFormat(v.Local.iCnt).CellFontUnderLine!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCellFontName,v.Local.iCnt, "FontStrikeOut",v.DataTable.RTRGridFormat(v.Local.iCnt).CellFontStrikeOut!FieldValsTring)
		gui.RTRGridFormat.gsRTRGridFormat.SetCellAppearance("GV_RTRGridFormat",v.Local.sCellFontName,v.Local.iCnt, "Trimming",v.DataTable.RTRGridFormat(v.Local.iCnt).CellTrimming!FieldValsTring)
	f.Intrinsic.Control.Next(v.Local.iCnt)	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Set_CellFormat.End

Program.Sub.Set_Default_RTRGridFormat.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	f.Data.DataTable.AddRow("RTRGridFormat","Col","BPARENT","OrigCap","Parent","Caption","Parent","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Parent","HeaderFontBold","True","HeaderFontSize","8.25")		
	f.Data.DataTable.AddRow("RTRGridFormat","Col","DESCR_BP","OrigCap","Parent Description","Caption","Parent Description","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Parent Description","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","BOM_SEQ","OrigCap","Bom Seq","Caption","Bom Seq","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Bom Seq","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","RTR_SEQ","OrigCap","RTR Seq","Caption","RTR Seq","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","RTR Seq","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","PART","OrigCap","Part","Caption","Part","HeaderBackColor","Beige","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Part","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","DESCRIPTION","OrigCap","Description","Caption","Description","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Description","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","DESCRIPTION_2","OrigCap","Alt Descr 1","Caption","Alt Descr 1","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Alt Descr 1","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","DESCRIPTION_3","OrigCap","Alt Descr 2","Caption","Alt Descr 2","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Alt Descr 2","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","COMMENTS","OrigCap","Comments","Caption","Comments","HeaderBackColor","Beige","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Comments","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","LMO","OrigCap","LMO","Caption","LMO","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","LMO","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","PL","OrigCap","PL","Caption","PL","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","PL","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","CATEGORY","OrigCap","Category","Caption","Category","HeaderBackColor","Beige","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Category","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","CAT_CODE","OrigCap","Cat Code","Caption","Cat Code","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Cat Code","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","SOURCE","OrigCap","Source","Caption","Source","HeaderBackColor","Ivory","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Source","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","SOURCE_CODE","OrigCap","Source Code","Caption","Source Code","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Source Code","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","OP_CODE","OrigCap","Op Code","Caption","Op Code","HeaderBackColor","Beige","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Op Code","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","UM","OrigCap","UM","Caption","UM","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","UM","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","TYPE","OrigCap","Type","Caption","Type","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Type","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","SET_UP","OrigCap","Setup","Caption","Setup","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Setup","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","FREQUENCY","OrigCap","Frequency","Caption","Frequency","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Frequency","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","QTY","OrigCap","Qty / Runtime","Caption","Qty / Runtime","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Qty / Runtime","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","COST","OrigCap","Cost","Caption","Cost","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Cost","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","PURCHASE_FACTOR","OrigCap","Purchase Conversion","Caption","Purchase Conversion","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Purchase Conversion","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","PURCH_COST","OrigCap","Purchase Cost","Caption","Purchase Cost","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Purchase Cost","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","TAG","OrigCap","Tag","Caption","Tag","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Tag","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","SIGNOFF_GRPUSR","OrigCap","Signoff GRPUSR","Caption","Signoff GRPUSR","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Signoff GRPUSR","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","SIGNOFF_TYPE","OrigCap","Signoff Type","Caption","Signoff Type","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Signoff Type","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","TIER","OrigCap","Tier","Caption","Tier","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Tier","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","CTIER","OrigCap","CTier","Caption","CTier","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","CTier","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","COMPLETE","OrigCap","Complete","Caption","Complete","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Complete","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","RTR_SEQ_NUM","OrigCap","RTR Seq Num","Caption","RTR Seq Num","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","RTR Seq Num","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","PAR_INDEX","OrigCap","Part Index","Caption","Part Index","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Part Index","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","CH_INDEX","OrigCap","CH Index","Caption","CH Index","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","CH Index","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","EXTENDED","OrigCap","Extended","Caption","Extended","HeaderBackColor","Beige","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Extended","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Loc","OrigCap","Loc","Caption","Loc","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Loc","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Issue_UM","OrigCap","Issue UM","Caption","Issue UM","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Issue UM","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Consump_Conv","OrigCap","Consump. Conversion","Caption","Consump. Conversion","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Consump. Conversion","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Consump_Cost","OrigCap","Consump. Cost","Caption","Consump. Cost","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Consump. Cost","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Consump_Extended","OrigCap","Consump. Extended","Caption","Consump. Extended","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Consump. Extended","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Weight","OrigCap","Unt. Weight","Caption","Unt. Weight","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Unt. Weight","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Consump_Weight","OrigCap","Unit Consump. Weight","Caption","Unit Consump. Weight","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Unit Consump. Weight","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","ExtendedWeight","OrigCap","Extended Weight","Caption","Extended Weight","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Extended Weight","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","ExtendedConsumpWeight","OrigCap","Extended Consump. Weight","Caption","Extended Consump. Weight","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Extended Consump. Weight","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Insert_Bom","OrigCap","Insert Bom","Caption","Insert Bom","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Insert Bom","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Date_Maintenance","OrigCap","Date Maintenance","Caption","Date Maintenance","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Date Maintenance","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","QUANTITY_6","OrigCap","Quantity 6","Caption","Quantity 6","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Quantity 6","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Date_Start","OrigCap","Date Start","Caption","Date Start","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Date Start","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Date_Stop","OrigCap","Date Stop","Caption","Date Stop","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Date Stop","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","BM_Serial_Start","OrigCap","BM Serial Start","Caption","BM Serial Start","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","BM Serial Start","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","BM_Serial_Stop","OrigCap","BM Serial Stop","Caption","BM Serial Stop","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","BM Serial Stop","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Purge_Flag","OrigCap","Purge Flag","Caption","Purge Flag","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Purge Flag","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","ORDR_USR_FLAG","OrigCap","Ordr Usr Flag","Caption","Ordr Usr Flag","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Ordr Usr Flag","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","DRAWING","OrigCap","Drawing","Caption","Drawing","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Drawing","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Date_Last_Chg","OrigCap","Date Last Chg","Caption","Date Last Chg","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Date Last Chg","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Time_Last_Chg","OrigCap","Time Last Chg","Caption","Time Last Chg","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Time Last Chg","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Last_Chg_By","OrigCap","Last Chg By","Caption","Last Chg By","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Last Chg By","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Last_Chg_Prog","OrigCap","Last Chg Prog","Caption","Last Chg Prog","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Last Chg Prog","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Drawing_Size","OrigCap","Drawing Size","Caption","Drawing Size","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Drawing Size","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","REQ_TRACE","OrigCap","Req Trace","Caption","Req Trace","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Req Trace","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Cost_Date","OrigCap","Cost Date","Caption","Cost Date","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Cost Date","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Inactive","OrigCap","Inactive","Caption","Inactive","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Inactive","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Chg_Rev","OrigCap","Chg Rev","Caption","Chg Rev","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Chg Rev","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","Setup_Qty","OrigCap","Setup Qty","Caption","Setup Qty","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Setup Qty","HeaderFontBold","True","HeaderFontSize","8.25")	
	f.Data.DataTable.AddRow("RTRGridFormat","Col","DISPLAY_PART","OrigCap","Long Part (Large/Small)","Caption","Long Part (Large/Small)","HeaderBackColor","WhiteSmoke","HeaderForeColor","Black","HeaderFontItalic","False","HeaderFontUnderLine","False","CellFontName","Tahoma","CellFontSize","8.25","CellFontBold","False","CellFontItalic","False","CellFontUnderLine","False","CellFontStrikeOut","False","CellTrimming","False","ToolTip","Long Part (Large/Small)","HeaderFontBold","True","HeaderFontSize","8.25")

f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Set_Default_RTRGridFormat.End

Program.Sub.BuildV_Qty.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)
	'view used for edit the build or quote quantities for the BOM or Router.
	f.Intrinsic.Control.If(v.DataTable.BUILDQTY.Exists,=,False)
		f.Intrinsic.ui.Msgbox("BUILDQTY table is not created beforehand. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf
	
	'Bind grid
	f.Intrinsic.Control.If(v.DataView.BUILDQTY!V_BUILDQTY.Exists)
		F.Data.DataView.Close("BUILDQTY","V_BUILDQTY")	
	f.Intrinsic.Control.EndIf		
	F.Data.DataView.Create("BUILDQTY","V_BUILDQTY")	
	GUI.Form.GGC_Quantity.DataSource("BUILDQTY")
	GUI.Form.GGC_Quantity.AddGridviewFromDataview("GV_QTY","BUILDQTY","V_BUILDQTY")
	
	GUI.Form.GGC_Quantity.SuspendLayout()
	
	GUI.Form.GGC_Quantity.SetGridViewProperty("GV_QTY","MultiSelect",True)
		
	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","PART","Visible",False)
	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","PRICE","Visible",False)
	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","QUANTITY","ReadOnly",False)
	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","QUANTITY","AllowEdit",True)
	
	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","QUANTITY","HeaderFontBold",True)
	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","PART","HeaderFontBold",True)
	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","PRICE","HeaderFontBold",True)		

	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","QUANTITY","Caption","Quantity")	
	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","PART","Caption","Part")
	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","PRICE","Caption","Price")	
	
	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","PRICE","HeaderHAlignment","far")
	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","PRICE","DisplayCustomNumeric",v.Global.sCustomNum2Dec)
	
	GUI.Form.GGC_Quantity.SetColumnProperty("GV_QTY","PART","CellTrimming","None")	
	
	GUI.Form.GGC_Quantity.ResumeLayout()

f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.BuildV_Qty.End

Program.Sub.Buildv_BookMarks.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	f.Intrinsic.Control.If(v.DataTable.BookMarks.Exists,=,False)
		f.Intrinsic.ui.Msgbox("BookMarks table is not created beforehand. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf
	
	'Bind grid
	GUI.Form.gsBookMarks.AddGridviewFromDatatable("Gv_BookMarks","BookMarks")
	
	GUI.Form.gsBookMarks.SuspendLayout()
	
	GUI.Form.gsBookMarks.SetGridViewProperty("Gv_BookMarks","MultiSelect",False)
	GUI.Form.gsBookMarks.SetGridViewProperty("Gv_BookMarks","ShowGroupPanel",False)
	GUI.Form.gsBookMarks.SetGridViewProperty("Gv_BookMarks","AllowColumnResizing",True)
	GUI.Form.gsBookMarks.SetGridViewProperty("Gv_BookMarks","OptionsViewColumnAutoWidth",False)	
		
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Part","HeaderFontBold",True)
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Descr","HeaderFontBold",True)
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Delete","HeaderFontBold",True)	

	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","PART","Caption","Bookmarks")
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Descr","Caption","Descr")	
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Delete","Caption","Delete")	
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Delete","MinWidth","55")
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Descr","MinWidth","55")
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Delete","MaxWidth","55")
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Part","MinWidth","100")
	
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Descr","Visible","False")
	
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Delete","HeaderHAlignment","center")
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Delete","CellHAlignment","center")
	
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Delete","AllowEdit",False)
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Delete","ReadOnly",True)
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Part","AllowEdit",False)
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Part","ReadOnly",True)
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Descr","AllowEdit",True)
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Descr","ReadOnly",False)	
	
	GUI.Form.gsBookMarks.SetColumnProperty("Gv_BookMarks","Part","CellForeColor","Blue")	
	
	GUI.Form.gsBookMarks.ColumnEdit("Gv_BookMarks","Delete","editorbutton","Delete")	
	
	gui.form.gsBookMarks.MainView("Gv_BookMarks")
	
	GUI.Form.gsBookMarks.ResumeLayout()

f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Buildv_BookMarks.End

Program.Sub.Buildv_BookM.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	f.Intrinsic.Control.If(v.DataTable.BookMarks.Exists,=,False)
		f.Intrinsic.UI.Msgbox("BookMarks table is not created beforehand. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf
	
	Gui.BookM.gsBookM.AddGridviewFromDatatable("GV_BookM","BookMarks")
	
	Gui.BookM.gsBookM.SuspendLayout()
	
	Gui.BookM.gsBookM.SetGridViewProperty("GV_BookM","MultiSelect",False)
	Gui.BookM.gsBookM.SetGridViewProperty("GV_BookM","ShowGroupPanel",False)
	Gui.BookM.gsBookM.SetGridViewProperty("GV_BookM","OptionsViewShowAutoFilterRow",True)
	Gui.BookM.gsBookM.SetGridViewProperty("GV_BookM","AllowColumnResizing",True)
	Gui.BookM.gsBookM.SetGridViewProperty("GV_BookM","OptionsViewColumnAutoWidth",False)		
		
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Part","HeaderFontBold",True)
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Delete","HeaderFontBold",True)	
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Descr","HeaderFontBold",True)	

	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","PART","Caption","BookMarks")
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Delete","Caption","Delete")	
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Descr","Caption","Descr")	
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Delete","MinWidth","55")
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Delete","MaxWidth","55")
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Descr","MinWidth","55")
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Part","MinWidth","100")
	
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Descr","Visible",False)
	
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Delete","HeaderHAlignment","center")
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Delete","CellHAlignment","center")
	
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Delete","AllowEdit",False)
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Delete","ReadOnly",True)
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Part","AllowEdit",False)
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Part","ReadOnly",True)	
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Descr","AllowEdit",True)
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Descr","ReadOnly",False)	
	
	Gui.BookM.gsBookM.SetColumnProperty("GV_BookM","Part","CellForeColor","Blue")
	
	Gui.BookM.gsBookM.ColumnEdit("GV_BookM","Delete","editorbutton","Delete")
		
	Gui.BookM.gsBookM.MainView("GV_BookM")
	Gui.BookM.gsBookM.ResumeLayout()

f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Buildv_BookM.End

Program.Sub.Get_BookMarks.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)
	v.Local.sSQL.Declare
	v.Local.bEx.Declare
	
	f.Intrinsic.String.Build("Select Part,Descr from GCG_4986_Bookmarks where UserID = '{0}' and CCC = '{1}'",v.Caller.User,v.Caller.CompanyCode,v.Local.sSQL)
	f.Data.DataTable.CreateFromSQL("Temp_BookMarks","conx",v.Local.sSQL,True)
	f.Data.DataTable.AddColumn("Temp_BookMarks","Delete","String","Delete")
	f.Intrinsic.Control.If(v.DataTable.Temp_BookMarks.RowCount,>,0)
		f.Data.DataTable.Merge("Temp_BookMarks","Bookmarks",False,2)
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Close("Temp_BookMarks")

f.Intrinsic.Control.catch
	f.Intrinsic.String.IsInString(v.Ambient.ErrorDescription,"Invalid Column name:'Descr'",True,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.ODBC.Connection!conx.Execute("Drop table GCG_4986_Bookmarks")
		f.Intrinsic.Control.CallSub(Check_And_Create_Tables)
		f.Intrinsic.Control.CallSub(Get_Bookmarks)
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
	f.Intrinsic.Control.EndIf
	
f.Intrinsic.Control.EndTry
Program.Sub.Get_BookMarks.End

Program.Sub.BuildV_Material.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	f.Intrinsic.Control.If(v.DataTable.MATERIAL.Exists,=,False)
		f.Intrinsic.ui.Msgbox("MATERIAL table is not created beforehand. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf
	'Bind grid
	f.Intrinsic.Control.If(v.DataView.MATERIAL!V_MATERIAL.Exists)
		F.Data.DataView.Close("MATERIAL","V_MATERIAL")	
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.Create("MATERIAL","V_MATERIAL")	
	gui.Form.GGC_Mat.DataSource("MATERIAL")
	gui.Form.GGC_Mat.AddGridviewFromDataview("GV_MATERIAL","MATERIAL","V_MATERIAL")
	
	gui.Form.GGC_Mat.SuspendLayout()
	
	gui.Form.GGC_Mat.SetGridviewProperty("GV_MATERIAL","OptionsViewShowAutoFilterRow",True)
	gui.Form.GGC_Mat.SetGridviewProperty("GV_MATERIAL","OptionsFindAlwaysVisible",True)
	gui.Form.GGC_Mat.SetGridviewProperty("GV_MATERIAL","AllowColumnResizing",True)
	gui.Form.GGC_Mat.SetGridviewProperty("GV_MATERIAL","OptionsViewColumnAutoWidth",False)	
	
	'visible
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","COST","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE_CODE","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","UM","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PUofM","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PURCHASE_FACTOR","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PURCH_COST","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","TEXT","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","CODE_BOM","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","BOM_REF","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Location","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Issue_UM","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Conv","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Cost","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Display_Part","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE_CODE","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Prop_Code","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PartTrim","Visible",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PartTrim","AllowShowHide",False)

	'font
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PART","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION_2","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION_3","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SORT_CODE","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PL","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetcolumnProperty("GV_MATERIAL","SOURCE_CODE","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","COST","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","UM","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PUofM","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PURCHASE_FACTOR","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PURCH_COST","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","TEXT","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","CODE_BOM","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","BOM_REF","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Location","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Issue_UM","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Conv","HeaderFontBold",True)	
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Cost","HeaderFontBold",True)	
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Weight","HeaderFontBold",True)	
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Weight","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Display_Part","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Prop_Code","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Lead","HeaderFontBold",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","LeadHours","HeaderFontBold",True)
	'filter
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PART","AllowFilter",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION","AllowFilter",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SORT_CODE","AllowFilter",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PL","AllowFilter",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE_CODE","AllowFilter",True)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE","AllowFilter",True)
	'width
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PART","MinWidth","20")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION","MinWidth","20")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION_2","MinWidth","20")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION_3","MinWidth","20")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SORT_CODE","MinWidth","20")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE_CODE","MinWidth","20")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE","MinWidth","60")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PL","MinWidth","40")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PL","MaxWidth","40")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","UM","MinWidth","40")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","UM","MaxWidth","40")	
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Location","MinWidth","40")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Location","MaxWidth","40")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Issue_UM","MinWidth","20")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Conv","MinWidth","20")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Cost","MinWidth","20")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Weight","MinWidth","20")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Weight","MinWidth","20")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Display_Part","MinWidth","20")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Prop_Code","MinWidth","55")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Prop_Code","MaxWidth","55")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Lead","MinWidth","40")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","LeadHours","MinWidth","40")	
	
	'edit/readonly
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PART","ReadOnly",True)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION","ReadOnly",True)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION_2","ReadOnly",True)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION_3","ReadOnly",True)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SORT_CODE","ReadOnly",True)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE_CODE","ReadOnly",True)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE","ReadOnly",True)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PL","ReadOnly",True)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PART","AllowEdit",False)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION","AllowEdit",False)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION_2","AllowEdit",False)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION_3","AllowEdit",False)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SORT_CODE","AllowEdit",False)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PL","AllowEdit",False)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE_CODE","AllowEdit",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","CODE_BOM","AllowEdit",False)
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","BOM_REF","AllowEdit",False)
	
	'Cellforecolor
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PART","CellForeColor","Blue")
	
	'captions
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION_2","Caption","ALT 1")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DESCRIPTION_3","Caption","ALT 2")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SORT_CODE","Caption","Sort code")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE_CODE","Caption","Source Code")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE","Caption","Source")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Issue_UM","Caption","Iss. UM")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Part","Caption","Part")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Description","Caption","Description")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PURCHASE_FACTOR","Caption","P. Conversion")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Location","Caption","Locn")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Bom_Ref","Caption","Bom Ref")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Code_Bom","Caption","Code Bom")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Cost","Caption","Cost")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Text","Caption","Extra Description")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","UM","Caption","UM")	
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PURCH_COST","Caption","P. Cost")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Conv","Caption","Consump. Conversion")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Cost","Caption","Consump. Cost")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Prop_Code","Caption","Shape")
	f.Intrinsic.Control.If(v.Global.bLongPart)
		F.Intrinsic.Control.If(V.Global.bLargeLongPart)
			gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DISPLAY_PART","Caption","Long Part (Large)")
		f.Intrinsic.Control.Else
			gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DISPLAY_PART","Caption","Long Part (Small)")
		F.Intrinsic.Control.EndIf		
	f.Intrinsic.Control.Else
		gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","DISPLAY_PART","Caption","Long Part (OFF)")
	f.Intrinsic.Control.EndIf	
	
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Weight","Caption","Weight")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Weight","Caption","Consump. Weight")	
	
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Cost","DisplayCustomNumeric",v.Global.sCustomNum4Dec)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PURCH_COST","DisplayCustomNumeric",v.Global.sCustomNum4Dec)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PURCHASE_FACTOR","DisplayCustomNumeric",v.Global.sCustomNum4Dec)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Conv","DisplayCustomNumeric",v.Global.sCustomNum4Dec)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Cost","DisplayCustomNumeric",v.Global.sCustomNum4Dec)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Weight","DisplayCustomNumeric",v.Global.sCustomNum4Dec)
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Weight","DisplayCustomNumeric",v.Global.sCustomNum4Dec)
	'Cell HAllignment
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SORT_CODE","CellHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PL","CellHAlignment","center")
	gui.Form.GGC_Mat.SetcolumnProperty("GV_MATERIAL","SOURCE_CODE","CellHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","COST","CellHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE_CODE","CellHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE","CellHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","UM","CellHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PUofM","CellHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PURCHASE_FACTOR","CellHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PURCH_COST","CellHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","CODE_BOM","CellHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Location","CellHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Issue_UM","CellHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Conv","CellHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Cost","CellHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Weight","CellHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Weight","CellHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Prop_Code","CellHAlignment","center")
	'Header HAllignment
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SORT_CODE","HeaderHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PL","HeaderHAlignment","center")
	gui.Form.GGC_Mat.SetcolumnProperty("GV_MATERIAL","SOURCE_CODE","HeaderHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","COST","HeaderHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","SOURCE","HeaderHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","UM","HeaderHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PUofM","HeaderHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PURCHASE_FACTOR","HeaderHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","PURCH_COST","HeaderHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","CODE_BOM","HeaderHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","BOM_REF","HeaderHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Location","HeaderHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Issue_UM","HeaderHAlignment","center")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Conv","HeaderHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Cost","HeaderHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Weight","HeaderHAlignment","far")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Weight","HeaderHAlignment","far")	
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Prop_Code","HeaderHAlignment","center")	
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Lead","HeaderHAlignment","far")	
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","LeadHours","HeaderHAlignment","far")	
	
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Lead","Caption","Lead (Days)")
	gui.Form.GGC_Mat.SetColumnProperty("GV_MATERIAL","LeadHours","Caption","Lead (Hrs)")	
	
	'Tool tip
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Consump_Cost","ToolTip","If Consumption UM is not blank and Consumption Conversion is greater than 0, Consumption Cost = Cost * Consumption Conversion. If not, Consumption Cost = Cost")
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Purch_Cost","ToolTip","If Purchase UM is not blank and Purchase Conversion is greater than 0, Purchase Cost = Cost * Purchase Conversion. If not, Purchase Cost = Cost")
	
	gui.form.GGC_Mat.SetColumnProperty("GV_MATERIAL","Display_Part","ToolTip","Your Company Option (Advanced) > Inventory > Used Long Part is turned ON or OFF")
	
	gui.Form.GGC_Mat.SetGridViewProperty("GV_MATERIAL","MultiSelect",True)

	gui.Form.GGC_Mat.ResumeLayout()

f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.BuildV_Material.End

Program.Sub.getMaterial.Start
F.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	v.Local.sSql.Declare
	v.Local.bEx.Declare
	v.Local.sLoc.Declare
	v.Local.sPLList.Declare
	
	'For Angola: Inventory_Mst2.Issue_UM, Inventory_Mst3.Consump_Conv	
	
	f.Intrinsic.Control.If(v.DataTable.MATERIAL.Exists,=,False)
		f.Intrinsic.ui.Msgbox("MATERIAL table is not created beforehand. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf
	
	GUI.Form.GGC_Mat.Visible(False)

	f.Data.DataTable.DeleteRow("MATERIAL")
	f.Data.DataTable.AcceptChanges("MATERIAL")
	
	'create the inventory data table to select from
	'building this in multiple tables, then merging in memory
	v.Local.sSql.Set("SELECT PROD_LINE FROM GCG_4986_OPTIONS WHERE ID = '2'")
	'PROD_LINES
	f.Intrinsic.Control.If(v.DataTable.PROD_LINES.Exists)
		f.Data.DataTable.Close("PROD_LINES")
	f.Intrinsic.Control.EndIf	
	F.Data.DataTable.CreateFromSQL("PROD_LINES","conx",V.Local.sSql,True)
	f.Intrinsic.Control.If(v.DataTable.PROD_LINES.RowCount,<,1)
		f.Intrinsic.UI.Msgbox("Go to System Support > Administation > Estimator Maintenance.  Make sure you click on the product lines you want to include in the Estimator","Product Lines not set")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf
	'Create Product Line list
	f.Data.DataTable.ColumnToString("PROD_LINES","Prod_Line",v.Local.sPLList)
	f.Intrinsic.String.Replace(v.Local.sPLList,"'","''",v.Local.sPLList)
	f.Intrinsic.String.Replace(v.Local.sPLList,"*!*","','",v.Local.sPLList)
	F.Data.DataTable.Close("PROD_LINES")
	
	f.Intrinsic.Control.SelectCase(v.Global.ddlMatLoc.UCase)
		f.Intrinsic.Control.Case("BLANK")
			V.Local.sLoc.Set("and i1.Location = ''")
		F.Intrinsic.Control.Case("MULTIPLE")
			v.Local.sLoc.Set("")
		f.Intrinsic.Control.Case("BY USER ASSIGNED LOCATION")	
			f.Intrinsic.String.Build("and i1.Location = '{0}'",v.Screen.Form!ddlMatLoc.Text,v.Local.sLoc)
		f.Intrinsic.Control.CaseElse
			f.Intrinsic.String.Build("and i1.Location = '{0}'",v.Screen.Form!ddlMatLoc.Text,v.Local.sLoc)
	f.Intrinsic.Control.EndSelect
	
	'Join i1 and i2 and i3 and icost
	f.Intrinsic.String.Build("select i1.Part,rtrim(i1.Part) as PartTrim, i1.Product_line as PL, i1.Description, i2.Description_2, i2.Description_3, i1.code_sort as Sort_Code, Case when i1.amt_alt_cost > 0 Then i1.amt_alt_cost Else IsNull(c.cost,0) End  as COST,If(Isnull(i2.Code_Source,'') = '','J',i2.Code_Source) AS Source_Code,Case When Isnull(i2.Code_Source,'') = 'M' Then 'MFG-STOCK'  When Isnull(i2.Code_Source,'') = 'F' Then 'MFG-JOB'  When Isnull(i2.Code_Source,'') = 'P' Then 'PUR-STOCK' When Isnull(i2.Code_Source,'') = 'J' Then 'PUR-JOB' When Isnull(i2.Code_Source,'') = 'C' Then 'CONS-STOCK' When Isnull(i2.Code_Source,'') = 'G' Then 'CONS-JOB' Else 'PUR-JOB'  End as Source,	i1.UM_inventory as UM, i1.UM_Purchasing as PUofM, i1.Factor_Conversion as Purchase_Factor,Convert(Case When i1.Factor_Conversion > 0.00 and i1.UM_Purchasing <> '' THEN Isnull(c.Cost,0) * i1.Factor_conversion else IsNull(c.Cost,0) end,SQL_Float) as Purch_Cost, i1.Code_BOM, i3.BOM_REF,i1.Location,i2.Issue_UM,Convert(IsNull(i3.Consump_Conv,0),SQL_Float) as Consump_Conv,Convert(Case When IsNull(i3.Consump_Conv,0) > 0.00 and i2.Issue_UM <> '' THEN Isnull(c.Cost,0) * i3.Consump_Conv else IsNull(c.Cost,0) end,SQL_Float) as Consump_Cost,IsNull(i2.LBS,0) as Weight,Case When IsNull(i3.Consump_Conv,0) > 0.00 and i2.Issue_UM <> '' THEN  Consump_Conv * i2.LBS Else i2.LBS End as Consump_Weight,'' as Text,i2.Prop_Code, i1.Time_Material_Lead as Lead from Inventory_Mstr i1 left join Inventory_Mst2 i2 on i1.Part = i2.Part and i1.Location = i2.Location left join Inventory_mst3 i3 on i1.Part = i3.Part and i1.Location = i3.Location left join Inventory_Cost c on i1.Part = c.Part and i1.Location = c.Locn Where Product_Line in ('{0}') {1}",v.Local.sPLList,v.Local.sLoc,v.Local.sSql)	
	f.Data.DataTable.CreateFromSQL("TEMP_ITEMS","conx",V.Local.sSql,True)		
	
	F.Data.DataView.Create("TEMP_ITEMS","V_TEMP_ITEMS",22,"SOURCE_CODE IS NULL","")
	F.Data.DataView.SetValue("TEMP_ITEMS","V_TEMP_ITEMS",-1,"SOURCE_CODE","J")
	'Merge to datatable "MATERIAL"	
	F.Data.DataTable.Merge("TEMP_ITEMS","MATERIAL",False,2)		
	f.Data.DataTable.Close("TEMP_ITEMS")
	
	'dPartTrimDescription
	'Weight
	f.Data.Dictionary.Exists("dPartTrimDescription",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("dPartTrimDescription")
	f.Intrinsic.Control.EndIf			
	F.Data.Dictionary.CreateFromDatatable("dPartTrimDescription","MATERIAL","PartTrim","Description",4)
	F.Data.Dictionary.SetDefaultReturn("dPartTrimDescription","")		
	
	'PROD_LINES
	f.Data.Dictionary.Exists("PROD_LINES",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("PROD_LINES")
	f.Intrinsic.Control.EndIf		
	f.Data.Dictionary.createFromDatatable("PROD_LINES","MATERIAL","PartTrim","PL",4)
	F.Data.Dictionary.SetDefaultReturn("PROD_LINES","")		
	
	'Part_SourceCode
	f.Data.Dictionary.Exists("Part_SourceCode",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("Part_SourceCode")
	f.Intrinsic.Control.EndIf			
	F.Data.Dictionary.CreateFromDatatable("Part_SourceCode","MATERIAL","PartTrim","Source_Code",4)
	F.Data.Dictionary.SetDefaultReturn("Part_SourceCode","")	
	
	'PURCOST
	f.Data.Dictionary.Exists("PURCOST",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("PURCOST")
	f.Intrinsic.Control.EndIf	
	F.Data.Dictionary.CreateFromDatatable("PURCOST","MATERIAL","PartTrim","PURCH_COST")
	F.Data.Dictionary.SetDefaultReturn("PURCOST",0)
	
	'Inventory Prop_Code for Shape
	f.Data.Dictionary.Exists("PROP_CODE",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("PROP_CODE")
	f.Intrinsic.Control.EndIf	
	F.Data.Dictionary.CreateFromDatatable("PROP_CODE","MATERIAL","PartTrim","PROP_CODE",4)
	F.Data.Dictionary.SetDefaultReturn("PROP_CODE","")		
	
	'PURCONVERSION
	f.Data.Dictionary.Exists("PURCONVERSION",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("PURCONVERSION")
	f.Intrinsic.Control.EndIf		
	F.Data.Dictionary.CreateFromDatatable("PURCONVERSION","MATERIAL","PartTrim","PURCHASE_FACTOR")
	F.Data.Dictionary.SetDefaultReturn("PURCONVERSION",0)
	
	'INVCOST
	f.Data.Dictionary.Exists("INVCOST",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("INVCOST")
	f.Intrinsic.Control.EndIf			
	F.Data.Dictionary.CreateFromDatatable("INVCOST","MATERIAL","PartTrim","COST")
	F.Data.Dictionary.SetDefaultReturn("INVCOST",0)
	
	'IssueUM
	f.Data.Dictionary.Exists("IssueUM",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("IssueUM")
	f.Intrinsic.Control.EndIf			
	F.Data.Dictionary.CreateFromDatatable("IssueUM","MATERIAL","PartTrim","Issue_UM",4)
	F.Data.Dictionary.SetDefaultReturn("IssueUM","")
	
	'ConsumpConv
	f.Data.Dictionary.Exists("ConsumpConv",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("ConsumpConv")
	f.Intrinsic.Control.EndIf			
	F.Data.Dictionary.CreateFromDatatable("ConsumpConv","MATERIAL","PartTrim","Consump_Conv",4)
	F.Data.Dictionary.SetDefaultReturn("ConsumpConv",0)	
	
	'Part_Source
	f.Data.Dictionary.Exists("Part_Source",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("Part_Source")
	f.Intrinsic.Control.EndIf			
	F.Data.Dictionary.CreateFromDatatable("Part_Source","Material","PartTrim","Source",4)
	F.Data.Dictionary.SetDefaultReturn("Part_Source","")	
	
	'Weight
	f.Data.Dictionary.Exists("dictWeight",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("dictWeight")
	f.Intrinsic.Control.EndIf			
	F.Data.Dictionary.CreateFromDatatable("dictWeight","MATERIAL","PartTrim","Weight",4)
	F.Data.Dictionary.SetDefaultReturn("dictWeight",0)	
	
	'LEADHOURS
	f.Data.Dictionary.Exists("LEADHOURS",v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		f.Data.Dictionary.Close("LEADHOURS")
	f.Intrinsic.Control.EndIf			
	F.Data.Dictionary.CreateFromDatatable("LEADHOURS","MATERIAL","PartTrim","LeadHours")
	F.Data.Dictionary.SetDefaultReturn("LEADHOURS",0)	
	
	'Long Part
	'The Part Type enumerable values are as follows:
	'0 - Standard part number
	'1 - Customer's part number
	'2 - Manufacturer's part number
	'3 - User's part number
	
	f.Intrinsic.Control.If(v.Global.bLongPart)
		F.Data.DataTable.AddDisplayPartColumn("MATERIAL",0,"PART","DISPLAY_PART2")
		F.Data.DataTable.CopyColumn("MATERIAL","DISPLAY_PART2","DISPLAY_PART")
		F.Data.DataTable.RemoveColumn("MATERIAL","DISPLAY_PART2")
	f.Intrinsic.Control.Else
		F.Data.DataTable.CopyColumn("MATERIAL","PART","DISPLAY_PART")
	f.Intrinsic.Control.EndIf	
	F.Data.DataTable.AcceptChanges("MATERIAL")
	
	GUI.Form.GGC_Mat.Visible(True)

f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.getMaterial.End

Program.Sub.BuildV_WCenter.Start
F.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	f.Intrinsic.Control.If(v.DataTable.WCENTER.Exists,=,False)
		f.Intrinsic.ui.Msgbox("WCENTER table is not created beforehand. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf

	'Bind grid
	f.Intrinsic.Control.If(v.DataView.WCENTER!V_WCENTER.Exists)
		F.Data.DataView.Close("WCENTER","V_WCENTER")	
	f.Intrinsic.Control.EndIf	
	F.Data.DataView.Create("WCENTER","V_WCENTER",22,"","TYPE ASC")
	GUI.Form.GGC_WC.DataSource("WCENTER")
	GUI.Form.GGC_WC.AddGridviewFromDataView("GV_WCENTER","WCENTER","V_WCENTER")
	
	GUI.Form.GGC_WC.SuspendLayout()
	
	'VISIBLE
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","SOHD","Visible",False)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","FOHD","Visible",False)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WG","Visible",False)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DESCR","Visible",False)
	'TITLE
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DESCRIPTION","Caption","DESCR")
	'FONT
	
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WC","HeaderFontBold",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WG","HeaderFontBold",True)	
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DEPT","HeaderFontBold",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DESCRIPTION","HeaderFontBold",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","COST","HeaderFontBold",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","TYPE","HeaderFontBold",True)
	
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DESCR","HeaderFontBold",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","SOHD","HeaderFontBold",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","FOHD","HeaderFontBold",True)
	
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WC","HeaderHAlignment","center")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","COST","HeaderHAlignment","far")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","TYPE","HeaderHAlignment","center")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","Dept","HeaderHAlignment","center")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WG","HeaderHAlignment","center")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","SOHD","HeaderHAlignment","far")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","FOHD","HeaderHAlignment","far")
	
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WC","CellHAlignment","center")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","TYPE","CellHAlignment","center")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","Dept","CellHAlignment","center")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WG","CellHAlignment","center")
	'width
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WG","MinWidth","40")	
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WC","MinWidth","40")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DESCRIPTION","MinWidth","120")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DESCR","MinWidth","120")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","COST","MinWidth","60")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","TYPE","MinWidth","40")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","Dept","MinWidth","40")	
	'sizing
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WC","AllowSize",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DEPT","Allowsize",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DESCRIPTION","AllowSize",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","COST","AllowSize",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","TYPE","AllowSize",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WC","FixedWidth",False)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DEPT","FixedWidth",False)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DESCRIPTION","FixedWidth",False)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","COST","FixedWidth",False)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","TYPE","FixedWidth",False)
	gui.Form.GGC_WC.SetGridviewProperty("GV_WCENTER","OptionsViewShowAutoFilterRow",True)
	gui.Form.GGC_WC.SetGridviewProperty("GV_WCENTER","OptionsFindAlwaysVisible",True)
	gui.Form.GGC_WC.SetGridviewProperty("GV_WCENTER","AllowColumnResizing",True)
	gui.Form.GGC_WC.SetGridviewProperty("GV_WCENTER","OptionsViewColumnAutoWidth",False)
	'edit/readonly
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WC","AllowEdit",False)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DEPT","AllowEdit",False)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DESCRIPTION","AllowEdit",False)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","COST","AllowEdit",False)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","TYPE","AllowEdit",False)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WC","ReadOnly",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DEPT","ReadOnly",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DESCRIPTION","ReadOnly",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","COST","ReadOnly",True)
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","TYPE","ReadOnly",True)
	
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DEPT","Caption","Dept.")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DESCRIPTION","Caption","Description")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","COST","Caption","Cost")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","TYPE","Caption","Type")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","WG","Caption","WG")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","DESCR","Caption","Descr. WG")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","SOHD","Caption","Std. OVHD")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","FOHD","Caption","Fixed OVHD")
	'	
	
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","COST","DisplayCustomNumeric","###,###,###,###.0000")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","SOHD","DisplayCustomNumeric","###,###,###,###.0000")
	gui.Form.GGC_WC.SetColumnProperty("GV_WCENTER","FOHD","DisplayCustomNumeric","###,###,###,###.0000")
	'multiselect default
	gui.Form.GGC_WC.SetGridviewProperty("GV_WCENTER","MultiSelect",True)
	
	gui.Form.GGC_WC.ResumeLayout()

f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.BuildV_WCenter.End

Program.Sub.BuildV_OPERATIONS.Start
'this subroutine was originally created to use workgroups.  There was a request to merge workcenter and workgroups, and add a view for OP Codes.  So this view has been retro-fitted to be populated with OP Code data, even though the column names represent workgroup data.  The query renames fields accordingly.  This was done to save in recoding a bunch of subroutines.
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	f.Intrinsic.Control.If(v.DataTable.OPERATIONS.Exists,=,False)
		f.Intrinsic.ui.Msgbox("OPERATIONS table is not created beforehand. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf
	
	'Bind grid
	f.Intrinsic.Control.If(v.DataView.OPERATIONS!V_OPERATIONS.Exists)
		F.Data.DataView.Close("OPERATIONS","V_OPERATIONS")	
	f.Intrinsic.Control.EndIf		
	F.Data.DataView.Create("OPERATIONS","V_OPERATIONS",22,"TRIM(WG) IS NOT NULL","")
	GUI.Form.GGC_OPCODE.DataSource("OPERATIONS")
	GUI.Form.GGC_OPCODE.AddGridviewFromDataView("GV_OPERATIONS","OPERATIONS","V_OPERATIONS")
	
	GUI.Form.GGC_OPCODE.SuspendLayout()
	
	'VISIBLE
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SOHD","Visible",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","FOHD","Visible",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DEPT","Visible",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DESCRIPTION","Visible",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SS","Visible",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SR","Visible",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","UM","Visible",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","TEXT","Visible",False)
	
	'FONT
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WG","HeaderFontBold",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WC","HeaderFontBold",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DEPT","HeaderFontBold",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","Description","HeaderFontBold",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","COST","HeaderFontBold",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","TYPE","HeaderFontBold",True)		
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DESCR","HeaderFontBold",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SOHD","HeaderFontBold",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","FOHD","HeaderFontBold",True)
	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","UM","HeaderFontBold",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","TEXT","HeaderFontBold",True)	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SS","HeaderFontBold",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SR","HeaderFontBold",True)	
	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WC","HeaderHAlignment","center")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","COST","HeaderHAlignment","far")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","TYPE","HeaderHAlignment","center")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","Dept","HeaderHAlignment","center")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WG","HeaderHAlignment","center")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SOHD","HeaderHAlignment","far")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","FOHD","HeaderHAlignment","far")
	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WC","CellHAlignment","center")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","TYPE","CellHAlignment","center")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","Dept","CellHAlignment","center")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WG","CellHAlignment","center")
	'width
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WG","MinWidth","40")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WC","MinWidth","40")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DEPT","MinWidth","20")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DESCRIPTION","MinWidth","120")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DESCR","MinWidth","120")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","COST","MinWidth","60")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","TYPE","MinWidth","40")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","Dept","MinWidth","40")
	
	'sizing
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WG","AllowSize",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WC","AllowSize",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DEPT","Allowsize",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DESCR","AllowSize",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","COST","AllowSize",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","UM","AllowSize",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","TEXT","AllowSize",True)
	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WG","FixedWidth",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WC","FixedWidth",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DEPT","FixedWidth",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DESCR","FixedWidth",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","COST","FixedWidth",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","UM","FixedWidth",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","TEXT","FixedWidth",False)
	
	gui.Form.GGC_OPCODE.SetGridviewProperty("GV_OPERATIONS","OptionsViewShowAutoFilterRow",True)
	gui.Form.GGC_OPCODE.SetGridviewProperty("GV_OPERATIONS","OptionsFindAlwaysVisible",True)
	gui.Form.GGC_OPCODE.SetGridviewProperty("GV_OPERATIONS","AllowColumnResizing",True)
	gui.Form.GGC_OPCODE.SetGridviewProperty("GV_OPERATIONS","OptionsViewColumnAutoWidth",False)
	'edit/readonly
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WG","AllowEdit",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WC","AllowEdit",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DEPT","AllowEdit",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DESCR","AllowEdit",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","COST","AllowEdit",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","UM","AllowEdit",False)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","TEXT","AllowEdit",False)
	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WG","ReadOnly",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WC","ReadOnly",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DEPT","ReadOnly",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DESCR","ReadOnly",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","COST","ReadOnly",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","UM","ReadOnly",True)
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","TEXT","ReadOnly",True)
	'set captions for a couple of columns
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WG","Caption","Machine")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","WC","Caption","Operation")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","Dept","Caption","Dept")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","DESCR","Caption","Descr WG")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","Description","Caption","Description")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","Cost","Caption","Cost")
	

	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","TYPE","Caption","Type")		
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SOHD","Caption","Std. OVHD")	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","FOHD","Caption","Fixed OVHD")	
	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","UM","Caption","UM")	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","TEXT","Caption","Text")	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SS","Caption","SS")	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SR","Caption","SR")	
	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","COST","DisplayCustomNumeric","###,###,###,###.0000")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SOHD","DisplayCustomNumeric","###,###,###,###.0000")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","FOHD","DisplayCustomNumeric","###,###,###,###.0000")	
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SS","DisplayCustomNumeric","###,###,###,###.0000")
	gui.Form.GGC_OPCODE.SetColumnProperty("GV_OPERATIONS","SR","DisplayCustomNumeric","###,###,###,###.0000")
		

	'multi select default
	gui.Form.GGC_OPCODE.SetGridviewProperty("GV_OPERATIONS","MultiSelect",True)

	gui.Form.GGC_OPCODE.ResumeLayout()
	
f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.BuildV_OPERATIONS.End

Program.Sub.getLabor.Start
F.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	f.Intrinsic.Control.If(v.DataTable.WCENTER.Exists,=,False)
		f.Intrinsic.ui.Msgbox("WCENTER table is not created beforehand. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.OPERATIONS.Exists,=,False)
		f.Intrinsic.ui.Msgbox("OPERATIONS table is not created beforehand. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf	

	f.Data.DataTable.DeleteRow("WCENTER")
	f.Data.DataTable.AcceptChanges("WCENTER")
	
	f.Data.DataTable.DeleteRow("OPERATIONS")
	f.Data.DataTable.AcceptChanges("OPERATIONS")
	
	'create the work center list
	F.Data.DataTable.CreateFromSQL("TEMP_WCENTER","conx","Select G.work_group as WG, C.MACHINE AS WC, c.WC_NAME as DESCRIPTION, G.DESCR AS DESCR, C.WC_DEPT as DEPT, CAST(c.standard_cost as DOUBLE) AS COST, C.STANDARD_OVHD as SOHD, C.FIXED_OVHD AS FOHD, 'W' as TYPE from V_WORKCENTERS C LEFT JOIN V_WORKGROUP_HEAD G on C.MACHINE = G.PROTOTYPE_WC",True)
	
	f.Data.DataTable.Merge("TEMP_WCENTER","WCENTER",False,2)
	f.Data.DataView.Create("TEMP_WCENTER","VIEW_TEMP",22,"WG IS NOT NULL","")
	f.Intrinsic.Control.If(v.DataTable.WORKGROUPS.Exists)
		F.Data.DataTable.Close("WORKGROUPS")
	f.Intrinsic.Control.EndIf
	F.Data.DataView.ToDataTableDistinct("TEMP_WCENTER","VIEW_TEMP","WORKGROUPS","WG*!*DESCR*!*DEPT*!*COST*!*FOHD*!*SOHD*!*TYPE",True)
	F.Data.DataTable.SetValue("WORKGROUPS",-1,"TYPE","G")
	F.Data.DataTable.AddExpressionColumn("WORKGROUPS","WC","STRING","[WG]")
	F.Data.DataTable.AddExpressionColumn("WORKGROUPS","DESCRIPTION","STRING","DESCR")
	'Merge to WCENTER
	F.Data.DataTable.Merge("WORKGROUPS","WCENTER",True,2)
	F.Data.DataTable.Close("TEMP_WCENTER")
	gui.Form.GGC_WC.MainView("GV_WCENTER")	
	
	F.Data.DataTable.CreateFromSQL("TEMP_OPS","conx","select A.MACHINE AS WG, A.OPERATION AS WC, A.DESCRIPTION AS DESCR, B.WC_DEPT AS DEPT, A.UNIT_MEASURE AS UM, C.TEXT, RATE AS COST, B.FIXED_OVHD AS FOHD, B.STANDARD_OVHD AS SOHD, A.STANDARD_SETUP as SS, A.STANDARD_RUNTIME AS SR FROM V_OP_CODES A INNER JOIN V_WORKCENTERS B ON A.MACHINE =  B.MACHINE LEFT JOIN V_OPCODE_TEXT C ON A.MACHINE = C.MACHINE AND A.OPERATION = C.OPERATION WHERE A.LMO = 'L' union select A.MACHINE AS WG, A.OPERATION AS WC, A.DESCRIPTION AS DESCR, B.WC_DEPT AS DEPT, A.UNIT_MEASURE AS UM, C.TEXT, RATE AS COST, B.FIXED_OVHD AS FOHD, B.STANDARD_OVHD AS SOHD, A.STANDARD_SETUP as SS , A.STANDARD_RUNTIME AS SR FROM OP_CODES A Inner Join WorkGroup_Head g on A.Machine = g.Work_group INNER JOIN V_WORKCENTERS B ON g.Prototype_WC =  B.MACHINE LEFT JOIN V_OPCODE_TEXT C ON A.MACHINE = C.MACHINE AND A.OPERATION = C.OPERATION WHERE A.LMO = 'L' and rtrim(A.machine) NOT in (select rtrim(machine) from workcenters) ",True)
	'Merge to Operations
	f.Data.DataTable.Merge("TEMP_OPS","OPERATIONS",False,2)
	f.Data.DataTable.Close("TEMP_OPS")
	gui.Form.GGC_OPCODE.MainView("GV_OPERATIONS")	

f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.getLabor.End

Program.Sub.BuildV_Outs.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	f.Intrinsic.Control.If(v.DataTable.OUTS.Exists,=,False)
		f.Intrinsic.ui.Msgbox("OUTS table is not created beforehand. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf		
	
	'Bind grid
	f.Intrinsic.Control.If(v.DataView.OUTS!V_OUTS.Exists)
		F.Data.DataView.Close("OUTS","V_OUTS")	
	f.Intrinsic.Control.EndIf		
	F.Data.DataView.Create("OUTS","V_OUTS")
	GUI.Form.GGC_Outs.DataSource("OUTS")
	GUI.Form.GGC_Outs.AddGridviewFromDataView("GV_OUTS","OUTS","V_OUTS")
	
	GUI.Form.GGC_Outs.SuspendLayout()
	
	'headerfont
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","VENDOR","HeaderFontBold",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","CODE","HeaderFontBold",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","DESCRIPTION","HeaderFontBold",True)	
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","UM","HeaderFontBold",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","SETUP","HeaderFontBold",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","RUNTIME","HeaderFontBold",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","LEAD","HeaderFontBold",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","TEXT","HeaderFontBold",True)


	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","UM","HeaderHAlignment","center")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","SETUP","HeaderHAlignment","far")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","RUNTIME","HeaderHAlignment","far")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","LEAD","HeaderHAlignment","far")
	
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","UM","CellHAlignment","center")	
	
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","SETUP","DisplayCustomNumeric","###,###,###,###.0000")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","RUNTIME","DisplayCustomNumeric","###,###,###,###.0000")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","LEAD","DisplayCustomNumeric","###,###,###,###.0000")
		
	'visible
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","SETUP","Visible",False)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","RUNTIME","Visible",False)
	GUI.Form.GGC_Outs.SetColumnProperty("GV_OUTS","UM","Visible",False)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","LEAD","Visible",False)
	'filter
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","VENDOR","AllowFilter",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","CODE","AllowFilter",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","DESCRIPTION","AllowFilter",True)
	'width/size
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","VENDOR","MinWidth","40")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","CODE","MinWidth","40")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","DESCRIPTION","MinWidth","40")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","UM","MinWidth","40")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","UM","MaxWidth","40")
	
	
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","VENDOR","AllowSize",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","CODE","AllowSize",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","DESCRIPTION","AllowSize",True)
	gui.Form.GGC_Outs.SetGridviewProperty("GV_OUTS","OptionsViewShowAutoFilterRow",True)
	gui.Form.GGC_Outs.SetGridviewProperty("GV_OUTS","OptionsFindAlwaysVisible",True)
	gui.Form.GGC_Outs.SetGridviewProperty("GV_OUTS","AllowColumnResizing",True)
	gui.Form.GGC_Outs.SetGridviewProperty("GV_OUTS","OptionsViewColumnAutoWidth",False)
	'edit/readonly
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","VENDOR","ReadOnly",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","CODE","ReadOnly",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","DESCRIPTION","ReadOnly",True)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","VENDOR","AllowEdit",False)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","CODE","AllowEdit",False)
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","DESCRIPTION","AllowEdit",False)
	
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","VENDOR","Caption","Vendor")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","CODE","Caption","Code")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","DESCRIPTION","Caption","Description")	
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","UM","Caption","UM")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","SETUP","Caption","Setup")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","RUNTIME","Caption","Runtime")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","LEAD","Caption","Lead")
	gui.Form.GGC_Outs.SetColumnProperty("GV_OUTS","TEXT","Caption","Text")
	
	GUI.Form.GGC_Outs.ResumeLayout()

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.BuildV_Outs.End

Program.Sub.getOutside.Start
F.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	f.Intrinsic.Control.If(v.DataTable.OUTS.Exists,=,False)
		f.Intrinsic.ui.Msgbox("OUTS table is not created beforehand. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf

	F.Data.DataTable.DeleteRow("OUTS")
	F.Data.DataTable.AcceptChanges("OUTS")
	
	'create the outside services list
	f.Data.DataTable.CreateFromSQL("TEMP_OUTS","conx","SELECT A.OPERATION AS VENDOR, A.MACHINE AS CODE, A.DESCRIPTION, A.STANDARD_SETUP AS SETUP, A.STANDARD_RUNTIME AS RUNTIME, A.UNIT_MEASURE AS UM, A.STD_LEAD_TIME AS LEAD,'' as Text,Machine + '-' + Operation as MO FROM V_OP_CODES A WHERE A.LMO = 'O'",True)
	f.Data.Dictionary.CreateFromSQL("BTEXTdict","conx","Select Machine + '-' + Operation as MO,Text from V_OPCODE_TEXT")
	f.Data.Dictionary.SetDefaultReturn("BTEXTdict","")
	f.Data.DataTable.FillFromDictionary("TEMP_OUTS","BTEXTdict","MO","Text")
	f.Data.Dictionary.Close("BTEXTdict")
	f.Data.DataTable.RemoveColumn("TEMP_OUTS","MO")
	f.Data.DataTable.acceptchanges("TEMP_OUTS")	
	
	F.Data.DataTable.Merge("TEMP_OUTS","OUTS",False,2)
	F.Data.DataTable.Close("TEMP_OUTS")
	
f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.getOutside.End

Program.Sub.BuildV_Child.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	v.Local.sLaborType.Declare
	v.Local.sCategory.Declare
	v.Local.sTool.Declare
	v.Local.sPCost.Declare
	v.Local.sPath.Declare
	
	f.Intrinsic.Control.If(v.Global.bTableGridLoaded)
		gui.Form.GGC_Bom.ClearRows("GV_CHILD")
	f.Intrinsic.Control.EndIf
	
	'Bind grid
	f.Intrinsic.Control.If(v.DataView.CHILD!V_CHILD.Exists)
		F.Data.DataView.Close("CHILD","V_CHILD")	
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.Create("CHILD","V_CHILD",22,"RTR_SEQ <> '000000' AND Part <> '~~~@!@~~~@!@'","RTR_SEQ,Bom_Seq")
	'gui.Form.GGC_Bom.DataSource("CHILD")
	gui.Form.GGC_Bom.AddGridviewFromDataview("GV_CHILD","CHILD","V_CHILD")	
	
	Gui.Form.GGC_Bom.SuspendLayout()
	
	Gui.Form.GGC_Bom.SetGridViewProperty("GV_CHILD","ColumnPanelRowHeight","35")
	gui.Form.GGC_Bom.SetGridViewProperty("GV_CHILD","AllowSort",False)
	GUI.Form.GGC_Bom.SetGridViewProperty("GV_CHILD","MultiSelect",False)
	gui.Form.GGC_Bom.SetGridviewProperty("GV_CHILD","AllowColumnResizing",True)
	gui.Form.GGC_Bom.SetGridviewProperty("GV_CHILD","OptionsViewColumnAutoWidth",False)	
	GUI.Form.GGC_Bom.SetGridViewProperty("GV_CHILD","OptionsSelectionEnableAppearanceFocusedRow",False)
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SelectSeq","HeaderFontBold",True)
	
	'visible false
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BPARENT","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCR_BP","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BOM_SEQ","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_2","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_3","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PL","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COMPLETE","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CAT_CODE","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SOURCE_CODE","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","TAG","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","TIER","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CTIER","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PAR_INDEX","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CH_INDEX","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RTR_SEQ_NUM","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_GRPUSR","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_TYPE","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Loc","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Conv","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Cost","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Extended","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Issue_UM","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Weight","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Weight","Visible",False)	
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ExtendedWeight","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ExtendedConsumpWeight","Visible",False)	
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Display_Part","Visible",False)	
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Sort_Code","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PhantomPart","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RefPart","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SeqSort","Visible",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PartID","Visible",False)	
	
	'Columns for Bom
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Insert_Bom","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Maintenance","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QUANTITY_6","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Purge_Flag","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Start","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Stop","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ORDR_USR_FLAG","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Last_Chg","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Time_Last_Chg","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Last_Chg_By","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Last_Chg_Prog","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","REQ_TRACE","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Cost_Date","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Inactive","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Chg_Rev","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Setup_Qty","Visible",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Serie","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Shape","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PartTrim2","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Frequency2","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Ext2","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCHCOST2","Visible",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","WCFactor2","Visible",False)
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PartTrim2","AllowShowHide",False)	
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BPARENT","AllowShowHide",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCR_BP","AllowShowHide",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BOM_SEQ","AllowShowHide",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COMPLETE","AllowShowHide",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CAT_CODE","AllowShowHide",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SOURCE_CODE","AllowShowHide",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","TIER","AllowShowHide",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CTIER","AllowShowHide",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PAR_INDEX","AllowShowHide",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CH_INDEX","AllowShowHide",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RTR_SEQ_NUM","AllowShowHide",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Loc","AllowShowHide",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SeqSort","AllowShowHide",False)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PartID","AllowShowHide",False)	
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Insert_Bom","AllowShowHide",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Maintenance","AllowShowHide",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QUANTITY_6","AllowShowHide",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Purge_Flag","AllowShowHide",False)		
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ORDR_USR_FLAG","AllowShowHide",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","REQ_TRACE","AllowShowHide",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Cost_Date","AllowShowHide",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Inactive","AllowShowHide",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Chg_Rev","AllowShowHide",False)		
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Serie","AllowShowHide",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PartTrim2","AllowShowHide",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Frequency2","AllowShowHide",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Ext2","AllowShowHide",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCHCOST2","AllowShowHide",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","WCFactor2","AllowShowHide",False)	
	
	'headerfontbold	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Serie","HeaderFontBold",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Shape","HeaderFontBold",True)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Sort_Code","HeaderFontBold",True)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PhantomPart","HeaderFontBold",True)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RefPart","HeaderFontBold",True)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SeqSort","HeaderFontBold",True)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Lead","HeaderFontBold",True)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Amt_Minimum","HeaderFontBold",True)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","MinFlag","HeaderFontBold",True)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","WC_Factor","HeaderFontBold",True)
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","MQD","HeaderFontBold",True)
	
	'header wrap
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RTR_SEQ","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SET_UP","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","FREQUENCY","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PART","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_2","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_3","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COMMENTS","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","LMO","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CATEGORY","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SOURCE","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SOURCE_Code","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","OP_CODE","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","TYPE","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","UM","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QTY","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COST","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCHASE_FACTOR","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCH_COST","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","EXTENDED","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_GRPUSR","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_TYPE","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Loc","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Display_Part","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Serie","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Shape","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","MQD","HeaderWordWrap","Wrap")
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PL","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Conv","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Cost","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Issue_UM","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Extended","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Weight","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Weight","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ExtendedWeight","HeaderWordWrap","Wrap")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ExtendedConsumpWeight","HeaderWordWrap","Wrap")	
	
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Sort_Code","HeaderWordWrap","Wrap")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PhantomPart","HeaderWordWrap","Wrap")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RefPart","HeaderWordWrap","Wrap")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SeqSort","HeaderWordWrap","Wrap")		
		
	'Columns for Bom
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Insert_Bom","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Maintenance","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QUANTITY_6","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Start","HeaderWordWrap","Wrap")		
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Stop","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BM_Serial_Start","HeaderWordWrap","Wrap")		
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BM_Serial_Stop","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Purge_Flag","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ORDR_USR_FLAG","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DRAWING","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Last_Chg","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Time_Last_Chg","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Last_Chg_By","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Last_Chg_Prog","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Drawing_Size","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","REQ_TRACE","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Cost_Date","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Inactive","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Chg_Rev","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Setup_Qty","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Amt_Minimum","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","MinFlag","HeaderWordWrap","Wrap")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","WC_Factor","HeaderWordWrap","Wrap")
	
	'Maxlength
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PART","MaxLength","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION","MaxLength","30")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_2","MaxLength","71")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_3","MaxLength","71")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_GRPUSR","MaxLength","8")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_TYPE","MaxLength","1")	
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Sort_Code","MaxLength","20")
	'Maxlength	
	'Columns for Bom		
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Start","MaxLength","6")		
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Stop","MaxLength","6")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BM_Serial_Start","MaxLength","15")		
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BM_Serial_Stop","MaxLength","15")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DRAWING","MaxLength","20")		
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Drawing_Size","MaxLength","1")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","WC_Factor","MaxLength","2")	
	
	'Columns for Bom
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SelectSeq","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Insert_Bom","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Maintenance","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QUANTITY_6","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Start","HeaderVAlignment","Top")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Stop","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BM_Serial_Start","HeaderVAlignment","Top")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BM_Serial_Stop","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Purge_Flag","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ORDR_USR_FLAG","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DRAWING","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Last_Chg","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Time_Last_Chg","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Last_Chg_By","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Last_Chg_Prog","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Drawing_Size","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","REQ_TRACE","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Cost_Date","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Inactive","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Chg_Rev","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Setup_Qty","HeaderVAlignment","Top")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Display_Part","HeaderVAlignment","Top")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Serie","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Shape","HeaderVAlignment","Top")

	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BParent","HeaderVAlignment","Top")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Bom_Seq","HeaderVAlignment","Top")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCR_BP","HeaderVAlignment","Top")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Sort_Code","HeaderVAlignment","Top")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PhantomPart","HeaderVAlignment","Top")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RefPart","HeaderVAlignment","Top")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SeqSort","HeaderVAlignment","Top")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Lead","HeaderVAlignment","Top")
	
	'header top
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RTR_SEQ","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SET_UP","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","FREQUENCY","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PART","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_2","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_3","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COMMENTS","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","LMO","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CATEGORY","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SOURCE","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Source_Code","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","OP_CODE","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","TYPE","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","UM","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QTY","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COST","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCHASE_FACTOR","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCH_COST","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","EXTENDED","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_GRPUSR","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_TYPE","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Loc","HeaderVAlignment","Top")
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PL","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Conv","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Cost","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Issue_UM","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Extended","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Weight","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Weight","HeaderVAlignment","Top")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ExtendedWeight","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ExtendedConsumpWeight","HeaderVAlignment","Top")	
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Cat_Code","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Tier","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Tag","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RTR_Seq_Num","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Par_Index","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Ctier","HeaderVAlignment","Top")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Complete","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CH_Index","HeaderVAlignment","Top")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Amt_Minimum","HeaderVAlignment","Top")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","MinFlag","HeaderVAlignment","Top")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","WC_Factor","HeaderVAlignment","Top")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","MQD","HeaderVAlignment","Top")

	'header far
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SelectSeq","HeaderHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RTR_SEQ","HeaderHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SET_UP","HeaderHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","FREQUENCY","HeaderHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PART","HeaderHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION","HeaderHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_2","HeaderHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_3","HeaderHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COMMENTS","HeaderHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","LMO","HeaderHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CATEGORY","HeaderHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SOURCE","HeaderHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Source_Code","HeaderHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","OP_CODE","HeaderHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","TYPE","HeaderHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","UM","HeaderHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QTY","HeaderHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COST","HeaderHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCHASE_FACTOR","HeaderHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCH_COST","HeaderHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","EXTENDED","HeaderHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_GRPUSR","HeaderHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_TYPE","HeaderHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Loc","HeaderHAlignment","center")
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PL","HeaderHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Conv","HeaderHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Cost","HeaderHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Issue_UM","HeaderHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Extended","HeaderHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Weight","HeaderHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Weight","HeaderHAlignment","Far")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ExtendedWeight","HeaderHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ExtendedConsumpWeight","HeaderHAlignment","Far")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Serie","HeaderHAlignment","far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Lead","HeaderHAlignment","far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Amt_Minimum","HeaderHAlignment","far")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","WC_Factor","HeaderHAlignment","far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","MQD","HeaderHAlignment","center")
	
	'cell far
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RTR_SEQ","CellHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SET_UP","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","FREQUENCY","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PART","CellHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION","CellHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_2","CellHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_3","CellHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COMMENTS","CellHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","LMO","CellHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CATEGORY","CellHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SOURCE","CellHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SOURCE_Code","CellHAlignment","Center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","OP_CODE","CellHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","TYPE","CellHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","UM","CellHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QTY","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COST","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCHASE_FACTOR","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCH_COST","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","EXTENDED","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_GRPUSR","CellHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_TYPE","CellHAlignment","near")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Loc","CellHAlignment","center")
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PL","CellHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Conv","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Cost","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Issue_UM","CellHAlignment","center")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Extended","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Weight","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Weight","CellHAlignment","Far")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ExtendedWeight","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ExtendedConsumpWeight","CellHAlignment","Far")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","MQD","CellHAlignment","center")
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Part","CellTrimming","None")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION","CellTrimming","None")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_2","CellTrimming","None")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_3","CellTrimming","None")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Comments","CellTrimming","None")	
	
	'column width
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SelectSeq","MinWidth","40")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RTR_SEQ","MinWidth","50")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SET_UP","MinWidth","70")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","FREQUENCY","MinWidth","70")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PART","MinWidth","70")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION","MinWidth","70")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_2","MinWidth","50")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_3","MinWidth","50")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COMMENTS","MinWidth","60")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","LMO","MinWidth","40")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","LMO","MaxWidth","40")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CATEGORY","MinWidth","60")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SOURCE","MinWidth","60")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SOURCE_Code","MinWidth","60")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","OP_CODE","MinWidth","60")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","UM","MinWidth","40")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","UM","MaxWidth","40")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Type","MinWidth","60")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Type","MaxWidth","60")		
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QTY","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COST","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCHASE_FACTOR","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCH_COST","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","EXTENDED","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Serie","MinWidth","40")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Shape","MinWidth","40")

	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Conv","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Cost","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Extended","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Issue_UM","MinWidth","60")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Issue_UM","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Weight","MinWidth","60")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Weight","MinWidth","80")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ExtendedWeight","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ExtendedConsumpWeight","MinWidth","80")
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Insert_Bom","MinWidth","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Maintenance","MinWidth","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QUANTITY_6","MinWidth","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Start","MinWidth","20")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Stop","MinWidth","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BM_Serial_Start","MinWidth","80")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BM_Serial_Stop","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Purge_Flag","MinWidth","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","ORDR_USR_FLAG","MinWidth","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DRAWING","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Last_Chg","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Time_Last_Chg","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Last_Chg_By","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Last_Chg_Prog","MinWidth","80")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Drawing_Size","MinWidth","60")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","REQ_TRACE","MinWidth","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Cost_Date","MinWidth","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Inactive","MinWidth","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Chg_Rev","MinWidth","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Setup_Qty","MinWidth","20")	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Display_Part","MinWidth","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Lead","MinWidth","20")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Wc_Factor","MinWidth","20")

	'allowedit
	'gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RTR_SEQ","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QTY","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","FREQUENCY","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","TYPE","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COST","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCHASE_FACTOR","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCH_COST","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SET_UP","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COMMENTS","AllowEdit",False)
	gui.Form.GGC_Bom.SetcolumnProperty("GV_CHILD","SOURCE","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CATEGORY","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PART","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","OP_CODE","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PL","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCR_BP","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SOURCE_CODE","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CAT_CODE","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_2","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_3","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","LMO","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","UM","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BPARENT","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BOM_SEQ","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_GRPUSR","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_TYPE","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","EXTENDED","AllowEdit",False)		
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SelectSeq","AllowEdit",False)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SelectSeq","ReadOnly",True)
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","WC_Factor","AllowEdit",True)	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","WC_Factor","ReadOnly",False)	
	
	'Allow Edit
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Lead","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Lead","ReadOnly",False)
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Amt_Minimum","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Amt_Minimum","ReadOnly",False)
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Tag","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Tag","ReadOnly",False)

	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Start","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Start","ReadOnly",False)
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Stop","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Date_Stop","ReadOnly",False)
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BM_Serial_Start","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BM_Serial_Start","ReadOnly",False)
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BM_Serial_Stop","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BM_Serial_Stop","ReadOnly",False)	
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Drawing","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Drawing","ReadOnly",False)	
	
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Drawing_Size","AllowEdit",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Drawing_Size","ReadOnly",False)
	
	'Allow Rowcell_click
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_GRPUSR","AllowEdit",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SIGNOFF_GRPUSR","ReadOnly",True)	
	
	'readonly
	'gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","RTR_SEQ","ReadOnly",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QTY","ReadOnly",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","FREQUENCY","ReadOnly",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","TYPE","ReadOnly",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COST","ReadOnly",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCH_COST","ReadOnly",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCHASE_FACTOR","ReadOnly",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SET_UP","ReadOnly",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COMMENTS","ReadOnly",True)
	gui.Form.GGC_Bom.SetcolumnProperty("GV_CHILD","SOURCE","ReadOnly",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CATEGORY","ReadOnly",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PART","ReadOnly",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","OP_CODE","ReadOnly",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION","ReadOnly",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PL","ReadOnly",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCR_BP","ReadOnly",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SOURCE_CODE","ReadOnly",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","CAT_CODE","ReadOnly",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_2","ReadOnly",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","DESCRIPTION_3","ReadOnly",False)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","LMO","ReadOnly",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","UM","ReadOnly",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BPARENT","ReadOnly",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","BOM_SEQ","ReadOnly",True)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","EXTENDED","ReadOnly",True)
	
	'header formatting for columns that have context menus

	'Cell forecolor
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PART","CellForeColor","blue")
	
	'column display formatting
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","COST","DisplayFormatType","NUMERIC")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","EXTENDED","DisplayFormatType","NUMERIC")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Extended","DisplayFormatType","NUMERIC")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCHASE_FACTOR","DisplayFormatType","NUMERIC")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Conv","DisplayFormatType","NUMERIC")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCH_COST","DisplayFormatType","NUMERIC")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","QTY","DisplayFormatType","NUMERIC")
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Consump_Cost","DisplayFormatType","NUMERIC")
	
	v.Local.iCnt.Declare
	v.Local.sMask.Declare
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.Decim.RowCount--,1)
		f.Intrinsic.String.Build("{0} ###,###,###,##{1}{2}",v.DataTable.Decim(v.Local.iCnt).Sign!FieldValString,v.DataTable.Decim(v.Local.iCnt).LeadZero!FieldValString,v.DataTable.Decim(v.Local.iCnt).Dec!FieldValString,v.Local.sMask)
		gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD",v.DataTable.Decim(v.Local.iCnt).Col!FieldValString,"DisplayCustomNumeric",v.Local.sMask)
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	'row color formatting
	gui.Form.GGC_Bom.AddStyleFormatCondition("GV_CHILD","SOURCE","PS","Expression","[LMO] = 'M' and [SOURCE] = 'PUR-STOCK'")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","SOURCE","PS","BACKCOLOR","LIGHTBLUE")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","SOURCE","PS","APPLYTOROW",True)
	
	gui.Form.GGC_Bom.AddStyleFormatCondition("GV_CHILD","SOURCE","PJ","Expression","[LMO] = 'M' and [SOURCE] = 'PUR-JOB'")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","SOURCE","PJ","BACKCOLOR","LIGHTBLUE")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","SOURCE","PJ","APPLYTOROW",True)
	
	gui.Form.GGC_Bom.AddStyleFormatCondition("GV_CHILD","SOURCE","MJ","Expression","[LMO] = 'M' and [SOURCE] = 'MFG-JOB'")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","SOURCE","MJ","BACKCOLOR","LIGHTGRAY")	
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","SOURCE","MJ","APPLYTOROW",True)
	
	gui.Form.GGC_Bom.AddStyleFormatCondition("GV_CHILD","SOURCE","MS","Expression","[LMO] = 'M' and [SOURCE] = 'MFG-STOCK'")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","SOURCE","MS","BACKCOLOR","LIGHTGRAY")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","SOURCE","MS","APPLYTOROW",True)	
	
	GUI.Form.GGC_Bom.AddStyleFormatCondition("GV_CHILD","LMO","L","EQUAL","L")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","LMO","L","BACKCOLOR","LEMONCHIFFON")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","LMO","L","APPLYTOROW",True)
	
	GUI.Form.GGC_Bom.AddStyleFormatCondition("GV_CHILD","LMO","O","EQUAL","O")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","LMO","O","BACKCOLOR","LIGHTGREEN")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","LMO","O","APPLYTOROW",True)
	
	GUI.Form.GGC_Bom.AddStyleFormatCondition("GV_CHILD","LMO","C","EQUAL","C")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","LMO","C","BACKCOLOR","PAPAYAWHIP")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","LMO","C","APPLYTOROW",True)
	
	GUI.Form.GGC_Bom.AddStyleFormatCondition("GV_CHILD","LMO","T","EQUAL","T")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","LMO","T","BACKCOLOR","SANDYBROWN")
	gui.Form.GGC_Bom.SetStyleFormatConditionProperty("GV_CHILD","LMO","T","APPLYTOROW",True)
	
	v.Local.sLaborType.set("Parts/Hour*!*Hours/Part*!*Minutes/Part*!*Seconds/Part*!*XParts/Minute")
	v.Local.sCategory.Set("Normal*!*Phantom*!*Exclude*!*Reference*!*Set Up")	
	gui.Form.GGC_Bom.ColumnEdit("GV_CHILD","TYPE","DropDownList",v.Local.sLaborType)
	gui.Form.GGC_Bom.ColumnEdit("GV_CHILD","CATEGORY","DropDownList",v.Local.sCategory)
	
	'Set bulk	
	f.Intrinsic.Control.CallSub(Set_Bulk_ChildFormat)

	f.Intrinsic.Control.If(v.Global.bLongPart)
		f.Intrinsic.Control.If(v.Global.bLargeLongPart)
			gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Display_Part","Caption","Long Part (Large)")
		f.Intrinsic.Control.Else
			gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Display_Part","Caption","Long Part (Small)")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Display_Part","Caption","Long Part (OFF)")
	f.Intrinsic.Control.EndIf	

	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Sort_Code","Caption","Sort Code")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","SelectSeq","Caption","Select Seq")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Amt_Minimum","Caption","Min Amt")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","MinFlag","Caption","Min Flag")
	
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Lead","Caption","Lead (Hrs)")
	GUI.Form.GGC_Bom.SetColumnProperty("GV_CHILD","WC_Factor","Caption","WC Factor")
	
	f.Intrinsic.Control.CallSub(Format_RTRSummary)
	
	'TOOL TIPS	
	f.Intrinsic.String.Build("Change by clicking or typing the first character {0} P - Parts per Hour {0} H - Hours per Part {0} M - Minutes Per Part {0} S - Seconds Per Part {0} X - Parts Per Minute {0} H - Hunderd Per Hour ",V.Ambient.NewLine,V.Local.sTool)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","TYPE","ToolTip",V.Local.sTool)
	f.Intrinsic.String.Build("If PUR CONV = 0, then P COST = Inventory Cost {0}Otherwise, P COST = COST * PUR CONV",V.Ambient.NewLine,V.Local.sPCost)		
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","PURCH_COST","ToolTip",v.Local.sPCost)
	gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD","Display_Part","ToolTip","Your Company Option (Advanced) > Inventory > Used Long Part is turned ON or OFF")
	
	GUI.Form.GGC_Bom.ContextMenuAttach("lines")	
	
	Gui.Form.GGC_Bom.ResumeLayout()

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.BuildV_Child.End

Program.Sub.Format_RTRSummary.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)
	v.Local.iCnt.Declare
	v.Local.sType.Declare
	v.Local.sPrefix.Declare
	v.Local.sMask.Declare
	
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.Decim.RowCount--,1)

		v.Local.sType.Set(v.DataTable.Decim(v.Local.iCnt).Summary!FieldValString)
		f.Intrinsic.String.Build("{0}{1}",v.DataTable.Decim(v.Local.iCnt).SummaryLabel!FieldValString,v.DataTable.Decim(v.Local.iCnt).SummarySign!FieldValString,v.Local.sPrefix)
		
		f.Intrinsic.String.Build("###,###,###,##{0}{1}",v.DataTable.Decim(v.Local.iCnt).SummaryLeadZero!FieldValString,v.DataTable.Decim(v.Local.iCnt).SummaryDec!FieldValString,v.Local.sMask)
		gui.Form.GGC_Bom.AddSummaryItem("GV_CHILD",v.DataTable.Decim(v.Local.iCnt).Col!FieldValString,"Net",v.Local.sType,v.Local.sPrefix,"",v.Local.sMask)
	f.Intrinsic.Control.Next(v.Local.iCnt)

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_RTRSummary.End

Program.Sub.Set_Bulk_ChildFormat.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)
	v.Local.sProperties.Declare
	v.Local.iInner.Declare
	v.Local.sProp.Declare
	v.Local.iCnt.Declare
	
	f.Intrinsic.String.Split(v.DataTable.RTRGridFormat.FieldNames,"*!*",v.Local.sProperties)
	f.Intrinsic.Control.For(v.Local.iCnt,2,v.Local.sProperties.UBound,1)
		v.Local.sProp.Set(v.Local.sProperties(v.Local.iCnt))
		f.Intrinsic.Control.For(v.Local.iInner,0,v.DataTable.RTRGridFormat.RowCount--,1)
			F.Intrinsic.Control.If(V.Local.sProp.left4,<>,"Cell")				
				gui.Form.GGC_Bom.SetColumnProperty("GV_CHILD",v.DataTable.RTRGridFormat(v.Local.iInner).Col!FieldValString,v.Local.sProp,v.DataTable.RTRGridFormat(v.Local.iInner).[v.Local.sProp]!FieldValString)		
			F.Intrinsic.Control.EndIf		
		f.Intrinsic.Control.Next(v.Local.iInner)	
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Set_Bulk_ChildFormat.End


Program.Sub.BuildV_Quote.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)
	v.Local.iDec.Declare
	v.Local.sMaskQty.Declare
	v.Local.sRet.Declare

	'Mask for Decimal
	f.Intrinsic.Control.If(v.Screen.Form!txtQtyDec.Text.Trim,=,"0",or,v.Screen.Form!txtQtyDec.Text.Trim,=,"")
		v.Local.sMaskQty.Set("###,###,###,##0")
	f.Intrinsic.Control.Else
		f.Intrinsic.Math.Add(16,v.Screen.Form!txtQtyDec.Text.Trim,v.Local.iDec)
		f.Intrinsic.String.RPad("###,###,###,##0.","0",v.Local.iDec,v.Local.sMaskQty)	
	f.Intrinsic.Control.EndIf

	f.Intrinsic.Control.If(v.DataTable.ORDUPLLINES.Exists,=,False)
		f.Intrinsic.ui.Msgbox("ORDUPLLINES table is not created beforehand. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf

	f.Data.DataTable.AddColumn("ORDUPLLINES","QTY","FLOAT",0)
	F.Data.DataTable.AddColumn("ORDUPLLINES","PRICE","FLOAT",0)
	F.Data.DataTable.AddColumn("ORDUPLLINES","CostDisplay","FLOAT",0)
	f.Data.DataTable.AddExpressionColumn("ORDUPLLINES","EXTENDED","FLOAT","QTY * PRICE")
	
	'Bind grid
	f.Intrinsic.Control.If(v.DataView.ORDUPLLINES!V_QLINES.Exists)
		F.Data.DataView.Close("ORDUPLLINES","V_QLINES")	
	f.Intrinsic.Control.EndIf	
	'create a view of the ORDUPLLines table to use as a quote lines view.
	F.Data.DataView.Create("ORDUPLLINES","V_QLINES",22)
	gui.Form.GGC_Quote.DataSource("ORDUPLLINES")
	gui.Form.GGC_Quote.AddGridviewFromDataview("GV_QLINES","ORDUPLLINES","V_QLINES")
	

	GUI.Form.GGC_Quote.SuspendLayout()
	
	'visible false
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Filler1","Visible",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","LineNumber","Visible",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","QtyOrdered","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","QuotedPrice","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Weight","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Filler2","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartLoc","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","OverridePrice","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","LineOrderDate","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","LinePromiseDate","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Cost","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UserField1","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UserField2","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UserField3","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UserField4","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UserField5","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","NoDeliveryBeforeDate","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","MustDeliverByDate","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","DataType","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","TextLine1","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","TextLine2","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","TextLine3","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","TextLine4","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","TextLine5","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","TextLine6","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","TextLine7","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","TextLine8","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","TextLine9","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","TextLine10","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","TaxStatusFlag","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","LineType","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","NegativeFlag","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PriceFlag","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","SufficientInvCheck","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","SurveyNo","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","RouterValFlag","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Router","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","RouterSeq","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","StockXRef","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","OriginalOrd","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","OriginalLine","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Length","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Width","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","CurrFlag","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","OrderDiscPercentage","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Filler3","Visible",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Extension","Visible",False)
	'Header Font Bold
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","LineNumber","HeaderFontBold",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Filler1","HeaderFontBold",True)	
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartNumber","HeaderFontBold",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartRev","HeaderFontBold",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartDesc","HeaderFontBold",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PL","HeaderFontBold",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","QTY","HeaderFontBold",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UM","HeaderFontBold",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PRICE","HeaderFontBold",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","EXTENDED","HeaderFontBold",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","CostDisplay","HeaderFontBold",True)
	'Display format
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","EXTENDED","DisplayFormatType","NUMERIC")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","EXTENDED","DisplayCustomNumeric","$ ###,###,###,###.00")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PRICE","DisplayFormatType","NUMERIC")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PRICE","DisplayCustomNumeric","$ ###,###,###,###.00")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","QTY","DisplayFormatType","NUMERIC")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","CostDisplay","DisplayFormatType","NUMERIC")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","CostDisplay","DisplayCustomNumeric","$ ###,###,###,###.000000")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","LineNumber","DisplayFormatType","NUMERIC")
	
	'HeaderHAlignment"
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Qty","HeaderHAlignment","Far")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Price","HeaderHAlignment","Far")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","EXTENDED","HeaderHAlignment","Far")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","CostDisplay","HeaderHAlignment","Far")
	
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UM","HeaderHAlignment","center")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UM","CellHAlignment","center")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PL","HeaderHAlignment","Center")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PL","CellHAlignment","center")
	
	'Header color
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartDesc","HeaderBackColor","Beige")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PL","HeaderBackColor","Ivory")	
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","CostDisplay","HeaderBackColor","Ivory")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Qty","HeaderBackColor","Beige")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UM","HeaderBackColor","Ivory")
	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Price","HeaderBackColor","Beige")	

	gui.Form.GGC_Quote.SetColumnProperty("GV_QLINES","QTY","DisplayCustomNumeric",v.Local.sMaskQty)
	
	'Allow Edit
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","LineNumber","AllowEdit",True)		
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","LineNumber","ReadOnly",False)
	
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Filler1","AllowEdit",True)		
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Filler1","ReadOnly",False)
	
	f.Intrinsic.Control.If(v.Global.bAllowPartChgQuote)
		GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartNumber","AllowEdit",True)
		GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartRev","AllowEdit",True)
		
		GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartNumber","ReadOnly",False)
		GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartRev","ReadOnly",False)		
	f.Intrinsic.Control.Else
		GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartNumber","AllowEdit",False)
		GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartRev","AllowEdit",False)		
		
		GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartNumber","ReadOnly",True)
		GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartRev","ReadOnly",True)
				
	f.Intrinsic.Control.EndIf

	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartDesc","AllowEdit",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartDesc","ReadOnly",False)
	
	'Max Length
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartDesc","MaxLength",30)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartNumber","MaxLength",17)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartRev","MaxLength",3)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","LineNumber","MaxLength",3)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Filler1","MaxLength",1)

	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","QTY","AllowEdit",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UM","AllowEdit",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PRICE","AllowEdit",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","EXTENDED","AllowEdit",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PL","AllowEdit",True)
	'ReadOnly

	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","QTY","ReadOnly",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UM","ReadOnly",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PRICE","ReadOnly",False)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","EXTENDED","ReadOnly",True)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PL","ReadOnly",False)
	'VisibleIndex
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","LineNumber","VisibleIndex",0)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Filler1","VisibleIndex",1)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartNumber","VisibleIndex",2)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartRev","VisibleIndex",3)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartDesc","VisibleIndex",4)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PL","VisibleIndex",5)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","CostDisplay","VisibleIndex",6)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","QTY","VisibleIndex",7)	
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UM","VisibleIndex",8)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PRICE","VisibleIndex",9)
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","EXTENDED","VisibleIndex",10)
	
	'Caption
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","LineNumber","Caption","Line")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Filler1","Caption","Suffix")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartNumber","Caption","Part")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartRev","Caption","Rev")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartDesc","Caption","Description")	
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","CostDisplay","Caption","Cost")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Qty","Caption","Quantity")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Price","Caption","Price")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Extended","Caption","Extended")
	
	'Column Width
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","LineNumber","MinWidth","40")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","Filler1","MinWidth","40")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","CostDisplay","MinWidth","85")	
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartNumber","MinWidth","150")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartRev","MinWidth","40")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartDesc","MinWidth","135")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PL","MinWidth","40")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","QTY","MinWidth","85")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","UM","MinWidth","40")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PRICE","MinWidth","85")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","EXTENDED","MinWidth","85")	
	
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartNumber","CellForeColor","Blue")
	GUI.Form.GGC_Quote.SetColumnProperty("GV_QLINES","PartRev","CellForeColor","Blue")

	'UM Combobox
	f.ODBC.Connection!conx.ExecuteAndReturn("SELECT CODE   FROM UM_CODES order by Code",v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,<>,"")
		f.Intrinsic.String.Replace(v.Local.sRet,"#$#","*!*",v.Local.sRet)
		Gui.Form.GGC_Quote.ColumnEdit("GV_QLINES","UM","Combobox",v.Local.sRet)
	f.Intrinsic.Control.EndIf	
	
	'Product Line Combobox
	f.ODBC.Connection!conx.ExecuteAndReturn("SELECT PRODUCT_LINE   FROM V_PRODUCT_LINE WHERE KEY_DATA = 'ORDPRDLN' AND LINE = '' Order by Product_Line",v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,<>,"")
		f.Intrinsic.String.Replace(v.Local.sRet,"#$#","*!*",v.Local.sRet)		
		Gui.Form.GGC_Quote.ColumnEdit("GV_QLINES","PL","Combobox",v.Local.sRet)
	f.Intrinsic.Control.EndIf	
	
	'Mask for Decimal
	f.Intrinsic.Control.If(v.Screen.Form!txtQtyDec.Text.Trim,=,"0")
		v.Local.sMaskQty.Set("###,###,###,##0")
	f.Intrinsic.Control.Else
		f.Intrinsic.Math.Add(16,v.Screen.Form!txtQtyDec.Text.Trim,v.Local.iDec)
		f.Intrinsic.String.RPad("###,###,###,##0.","0",v.Local.iDec,v.Local.sMaskQty)	
	f.Intrinsic.Control.EndIf	
	
	GUI.Form.GGC_Quote.ResumeLayout()

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.BuildV_Quote.End

Program.Sub.Build_Dictionaries.Start
F.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	V.Local.bEx.Declare

	'SOURCE
	f.Data.Dictionary.Exists("SOURCE",V.Local.bEx)
	F.Intrinsic.Control.If(V.Local.bEx)
		F.Data.Dictionary.Close("SOURCE")
	F.Intrinsic.Control.EndIf
	f.Data.Dictionary.Create("SOURCE")
	F.Data.Dictionary.AddItem("SOURCE","M","MFG-STOCK")
	F.Data.Dictionary.AddItem("SOURCE","F","MFG-JOB")
	F.Data.Dictionary.AddItem("SOURCE","P","PUR-STOCK")
	F.Data.Dictionary.AddItem("SOURCE","J","PUR-JOB")
	F.Data.Dictionary.AddItem("SOURCE","C","CONS-STOCK")
	F.Data.Dictionary.AddItem("SOURCE","G","CONS-JOB")
	f.Data.Dictionary.SetDefaultReturn("SOURCE","")
	
	'CATEGORY
	f.Data.Dictionary.Exists("CATEGORY",V.Local.bEx)
	F.Intrinsic.Control.If(V.Local.bEx)
		F.Data.Dictionary.Close("CATEGORY")
	F.Intrinsic.Control.EndIf	
	F.Data.Dictionary.Create("CATEGORY")
	F.Data.Dictionary.AddItem("CATEGORY","N","NORMAL")
	F.Data.Dictionary.AddItem("CATEGORY","P","PHANTOM")
	f.Data.Dictionary.AddItem("CATEGORY","X","EXCLUDE")
	f.Data.Dictionary.AddItem("CATEGORY","1","SETUP")
	f.Data.Dictionary.AddItem("CATEGORY","R","REFERENCE")
	F.Data.Dictionary.AddItem("CATEGORY","L","LAB")
	F.Data.Dictionary.AddItem("CATEGORY","O","OUT")
	F.Data.Dictionary.AddItem("CATEGORY","C","CMT")
	F.Data.Dictionary.AddItem("CATEGORY","T","TSK")
	f.Data.Dictionary.SetDefaultReturn("CATEGORY","NORMAL")
	
	'Dictionary for New Part Dropdown which has only 5 items of dictionary CATEGORY
	'ddLCategr
	f.Data.Dictionary.Exists("ddLCategr",V.Local.bEx)
	F.Intrinsic.Control.If(V.Local.bEx)
		F.Data.Dictionary.Close("ddLCategr")
	F.Intrinsic.Control.EndIf	
	F.Data.Dictionary.Create("ddLCategr")
	F.Data.Dictionary.AddItem("ddLCategr","N","NORMAL")
	F.Data.Dictionary.AddItem("ddLCategr","P","PHANTOM")
	f.Data.Dictionary.AddItem("ddLCategr","X","EXCLUDE")
	f.Data.Dictionary.AddItem("ddLCategr","1","SETUP")
	f.Data.Dictionary.AddItem("ddLCategr","R","REFERENCE")
	
	'SORTCODE
'	f.Data.Dictionary.Exists("SORTCODE",V.Local.bEx)
'	F.Intrinsic.Control.If(V.Local.bEx)
'		F.Data.Dictionary.Close("SORTCODE")
'	F.Intrinsic.Control.EndIf	
'	f.Data.Dictionary.CreateFromSQL("SORTCODE","conx","SELECT SORT_CODE, DESCR FROM V_INV_SORT",20)
'	f.Data.Dictionary.SetDefaultReturn("SORTCODE","")
	'DICTSORT
	f.Data.Dictionary.Exists("DICTSORT",V.Local.bEx)
	F.Intrinsic.Control.If(V.Local.bEx)
		F.Data.Dictionary.Close("DICTSORT")
	F.Intrinsic.Control.EndIf	
	f.Data.Dictionary.CreateFromSQL("DICTSORT","conx","SELECT SORT_CODE, RTRIM(SORT_CODE) + ' | ' + DESCR FROM V_INV_SORT",20)
	f.Data.Dictionary.SetDefaultReturn("DICTSORT","")	
	
	f.Data.Dictionary.Exists("DICTMQD",V.Local.bEx)
	F.Intrinsic.Control.If(V.Local.bEx)
		F.Data.Dictionary.Close("DICTMQD")
	F.Intrinsic.Control.EndIf	
	f.Data.Dictionary.CreateFromSQL("DICTMQD","conx","select RTRIM(PART), CONVERT(1,SQL_BIT) from  MAT_QTY_DISCNT where funct = 'RS' AND TYPE = 'QD' ")
	f.Data.Dictionary.SetDefaultReturn("DICTMQD",False)
	
f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Build_Dictionaries.End

Program.Sub.GridSeqViews.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	'creating views that will maintain the next bom and router sequence for adding lines to the grid.
	'material sequence for purchased or consigned meaterial
	F.Intrinsic.Control.If(V.DataView.CHILD!V_LABOR.Exists)
		f.Data.DataView.Close("CHILD","V_LABOR")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataView.CHILD!V_COMPONENTS.Exists)
		f.Data.DataView.Close("CHILD","V_COMPONENTS")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataView.CHILD!V_PURCHASED.Exists)
		f.Data.DataView.Close("CHILD","V_PURCHASED")
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataView.CHILD!V_EDITS.Exists)
		f.Data.DataView.Close("CHILD","V_EDITS")
	f.Intrinsic.Control.EndIf
	
	'if bhold sequence is TRUE, then material and labor sequences do NOT automatically move in the routers.  This means labor and material views can be the same.
	'view created with a filter based on the "hold sequence" company option
	f.Intrinsic.Control.If(v.Global.bHoldSeq.Not)
		'purchased materials
		F.Data.DataView.Create("CHILD","V_PURCHASED",22,"LMO = 'M' AND RTR_SEQ > '000000' AND RTR_SEQ < '990000'","RTR_SEQ ASC")
		'labor or outside services
		f.Data.DataView.Create("CHILD","V_LABOR",22,"LMO <> 'M' AND RTR_SEQ > '000000' AND RTR_SEQ < '990000'","RTR_SEQ ASC")
		'manufactured sub components
		f.Data.DataView.Create("CHILD","V_COMPONENTS",22,"RTR_SEQ > '989999'","RTR_SEQ ASC")
	f.Intrinsic.Control.Else
		'purchased materials
		F.Data.DataView.Create("CHILD","V_PURCHASED",22,"RTR_SEQ > '000000' AND RTR_SEQ < '990000'","RTR_SEQ ASC")
		'labor or outside services
		f.Data.DataView.Create("CHILD","V_LABOR",22,"RTR_SEQ > '000000' AND RTR_SEQ < '990000'","RTR_SEQ ASC")
		'manufactured sub components
		f.Data.DataView.Create("CHILD","V_COMPONENTS",22,"RTR_SEQ > '989999'","RTR_SEQ ASC")
	f.Intrinsic.Control.EndIf
	
	f.Data.DataView.SetFilter("CHILD","V_CHILD","RTR_SEQ > '000000' AND Part <> '~~~@!@~~~@!@'")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.GridSeqViews.End

Program.Sub.BuildBomCostTables.Start
'IN PROCESS for BOM Cost Buildup
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)
	
	v.Local.sImageFile.Declare
	v.Local.bEx.Declare
	
	'create the tables needed to display the cost buildup (not the same detail level as the core report)
	'use the same tables, view, and gridviews for both BOM and Router, except for the BOMDETAIL.  It' the same name, just a completely different layout
	F.Intrinsic.Control.If(V.Args.CALLER,=,"BOM")
		'flooom costs to build 1
		f.Intrinsic.Control.If(v.DataTable.BOMDETAIL.Exists)
			f.Data.DataTable.Close("BOMDETAIL")
		f.Intrinsic.Control.EndIf		
		f.Data.DataTable.Create("BOMDETAIL",True)
		f.Data.DataTable.AddColumn("BOMDETAIL","TYPE","STRING")
		f.Data.DataTable.AddColumn("BOMDETAIL","TOTAL COST","FLOAT",0.00,16)
		F.Data.DataTable.AddColumn("BOMDETAIL","SETUP COST","FLOAT",0.00,16)
		F.Data.DataTable.AddColumn("BOMDETAIL","UNIT COST","FLOAT",0.00,16)
		'gridview for floom cost
		F.Data.DataView.Create("BOMDETAIL","V_BOMDETAIL")
		Gui.bom_detail.GGC_Detail.DataSource("BOMDETAIL")
		Gui.bom_detail.GGC_Detail.AddGridViewFromDataView("GV_DETAIL","BOMDETAIL","V_BOMDETAIL")
		
		Gui.bom_detail.GGC_Detail.SuspendLayout()
		'DETAIL grid display
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","TOTAL COST","DisplayFormatType","NUMERIC")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","SETUP COST","DisplayFormatType","NUMERIC")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","UNIT COST","DisplayFormatType","NUMERIC")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","TOTAL COST","DisplayCustomNumeric","$###.00")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","SETUP COST","DisplayCustomNumeric","$###.00")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","UNIT COST","DisplayCustomNumeric","$###.00")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","TYPE","HeaderFontBold",True)
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","TOTAL COST","HeaderFontBold",True)
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","SETUP COST","HeaderFontBold",True)
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","UNIT COST","HeaderFontBold",True)
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","TYPE","headerHalignment","Near")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","TOTAL COST","headerHalignment","Far")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","SETUP COST","headerHalignment","Far")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","UNIT COST","headerHalignment","Far")
		
		Gui.bom_detail.GGC_Detail.ResumeLayout()
	f.Intrinsic.Control.Else
		'create the router detail table - use the same names as we use for the bom detail.  makes it easier from the form side of things
		f.Intrinsic.Control.If(v.DataTable.BOMDETAIL.Exists)
			f.Data.DataTable.Close("BOMDETAIL")
		f.Intrinsic.Control.EndIf		
		F.Data.Datatable.Create("BOMDETAIL",True)
		f.Data.DataTable.AddColumn("BOMDETAIL","TYPE","STRING")    
		f.Data.DataTable.AddColumn("BOMDETAIL","ROUTER","STRING")    
		f.Data.DataTable.AddColumn("BOMDETAIL","QTY","FLOAT",0.00,16)    
		f.Data.DataTable.AddColumn("BOMDETAIL","DIR_COST","FLOAT",0.00,16)    
		f.Data.DataTable.AddColumn("BOMDETAIL","COST","FLOAT",0.00,16)   
		f.Data.DataTable.AddColumn("BOMDETAIL","MATERIAL","FLOAT",0.00,16)    
		f.Data.DataTable.AddColumn("BOMDETAIL","OUTSIDE","FLOAT",0.00,16)    
		f.Data.DataTable.AddColumn("BOMDETAIL","LABOR","FLOAT",0.00,16)    
		f.Data.DataTable.AddColumn("BOMDETAIL","LABOR_HOURS","FLOAT",0.00,16)    
		f.Data.DataTable.AddColumn("BOMDETAIL","OVERHEAD","FLOAT",0.00,16) 
	
		'gridview for floom cost
		F.Data.DataView.Create("BOMDETAIL","V_BOMDETAIL",22,"TYPE = 'T'","")
		Gui.bom_detail.GGC_Detail.DataSource("BOMDETAIL")
		Gui.bom_detail.GGC_Detail.AddGridViewFromDataView("GV_DETAIL","BOMDETAIL","V_BOMDETAIL")
		
		gui.bom_detail.GGC_DETAIL.SuspendLayout()
		
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","QTY","DisplayFormatType","NUMERIC")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","DIR_COST","DisplayFormatType","NUMERIC")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","COST","DisplayFormatType","NUMERIC")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","MATERIAL","DisplayFormatType","NUMERIC")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","OUTSIDE","DisplayFormatType","NUMERIC")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","LABOR","DisplayFormatType","NUMERIC")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","LABOR_HOURS","DisplayFormatType","NUMERIC")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","OVERHEAD","DisplayFormatType","NUMERIC")
		
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","QTY","DisplayCustomNumeric","####.0000")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","DIR_COST","DisplayCustomNumeric","$###.0000")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","COST","DisplayCustomNumeric","$###.0000")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","MATERIAL","DisplayCustomNumeric","$###.0000")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","OUTSIDE","DisplayCustomNumeric","$###.0000")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","LABOR","DisplayCustomNumeric","$###.0000")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","LABOR_HOURS","DisplayCustomNumeric","###.0000")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","OVERHEAD","DisplayCustomNumeric","$###.0000")
		
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","QTY","HeaderFontBold",True)
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","DIR_COST","HeaderFontBold",True)
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","COST","HeaderFontBold",True)
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","MATERIAL","HeaderFontBold",True)
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","OUTSIDE","HeaderFontBold",True)
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","LABOR","HeaderFontBold",True)
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","LABOR_HOURS","HeaderFontBold",True)
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","OVERHEAD","HeaderFontBold",True)
		
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","QTY","headerHalignment","Far")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","DIR_COST","headerHalignment","Far")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","COST","headerHalignment","Far")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","MATERIAL","headerHalignment","Far")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","OUTSIDE","headerHalignment","Far")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","LABOR","headerHalignment","Far")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","LABOR_HOURS","headerHalignment","Far")
		gui.bom_detail.GGC_DETAIL.SetColumnProperty("GV_DETAIL","OVERHEAD","headerHalignment","Far")
		
		gui.BOM_DETAIL.GGC_DETAIL.SetColumnProperty("GV_DETAIL","TYPE","Visible",False)
		gui.BOM_DETAIL.GGC_DETAIL.SetColumnProperty("GV_DETAIL","ROUTER","Visible",False)
		
		gui.bom_detail.GGC_DETAIL.SuspendLayout()
	f.Intrinsic.Control.EndIf
	
	'markup percentages from the system
		f.Intrinsic.Control.If(v.DataTable.BOMMARKUP.Exists)
			f.Data.DataTable.Close("BOMMARKUP")
		f.Intrinsic.Control.EndIf	
	F.Data.DataTable.Create("BOMMARKUP",True)
	f.Data.DataTable.AddColumn("BOMMARKUP","TYPE","STRING")
	F.Data.DataTable.AddColumn("BOMMARKUP","COST","FLOAT",0.00,6)
	F.Data.DataTable.AddColumn("BOMMARKUP","MARKUP1","FLOAT",0.00,6)
	F.Data.DataTable.AddColumn("BOMMARKUP","MARKUP2","FLOAT",0.00,6)
	F.Data.DataTable.AddColumn("BOMMARKUP","MARKUP3","FLOAT",0.00,6)
	F.Data.DataTable.AddColumn("BOMMARKUP","MARKUP4","FLOAT",0.00,6)
	F.Data.DataTable.AddColumn("BOMMARKUP","MARKUP5","FLOAT",0.00,6)	
	
	'gridview for markup percents
	F.Data.DataView.Create("BOMMARKUP","V_BOMMARKUP")
	Gui.bom_detail.GGC_MARKUP.DataSource("BOMMARKUP")
	Gui.bom_detail.GGC_MARKUP.AddGridviewFromDataView("GV_MARKUP","BOMMARKUP","V_BOMMARKUP")
	
	Gui.bom_detail.GGC_MARKUP.SuspendLayout()
	
	'MARKUP grid display
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","TYPE","HeaderFontBold",True)
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","COST","HeaderFontBold",True)
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP1","HeaderFontBold",True)
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP2","HeaderFontBold",True)
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP3","HeaderFontBold",True)
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP4","HeaderFontBold",True)
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP5","HeaderFontBold",True)
	
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","TYPE","headerHalignment","Near")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","COST","headerHalignment","Far")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP1","headerHalignment","Center")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP2","headerHalignment","Center")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP3","headerHalignment","Center")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP4","headerHalignment","Center")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP5","headerHalignment","Center")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP1","cellHAlignment","Center")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP2","cellHAlignment","Center")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP3","cellHAlignment","Center")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP4","cellHAlignment","Center")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP5","cellHAlignment","Center")
	
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","COST","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP1","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP2","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP3","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP4","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP5","DisplayFormatType","NUMERIC")
	
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","COST","DisplayCustomNumeric","##.00")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP1","DisplayCustomNumeric","##.00")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP2","DisplayCustomNumeric","##.00")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP3","DisplayCustomNumeric","##.00")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP4","DisplayCustomNumeric","##.00")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP5","DisplayCustomNumeric","##.00")
	
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","TYPE","Width",35)
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","COST","Width",35)
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP1","Width",110)
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP2","Width",110)
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP3","Width",110)
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP4","Width",110)
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP5","Width",110)
	
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP1","Caption","MARKUP 1")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP2","Caption","MARKUP 2")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP3","Caption","MARKUP 3")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP4","Caption","MARKUP 4")
	Gui.bom_detail.GGC_MARKUP.SetColumnProperty("GV_MARKUP","MARKUP5","Caption","MARKUP 5")
	
	Gui.bom_detail.GGC_MARKUP.ResumeLayout()

	'sell prices by quantity and markup
	f.Intrinsic.Control.If(v.DataTable.BOMPRICE.Exists)
		f.Data.DataTable.Close("BOMPRICE")
	f.Intrinsic.Control.EndIf		
	F.Data.DataTable.Create("BOMPRICE",True)
	F.Data.DataTable.AddColumn("BOMPRICE","QUANTITY","FLOAT",0.00,12)
	F.Data.DataTable.AddColumn("BOMPRICE","UNIT_COST","FLOAT",0.00,12)
	F.Data.DataTable.AddColumn("BOMPRICE","PRICE_1","FLOAT",0.00,16)
	F.Data.DataTable.AddColumn("BOMPRICE","S1","BOOLEAN",FALSE)
	F.Data.DataTable.AddColumn("BOMPRICE","PRICE_2","FLOAT",0.00,16)
	F.Data.DataTable.AddColumn("BOMPRICE","S2","BOOLEAN",FALSE)
	F.Data.DataTable.AddColumn("BOMPRICE","PRICE_3","FLOAT",0.00,16)
	F.Data.DataTable.AddColumn("BOMPRICE","S3","BOOLEAN",FALSE)
	F.Data.DataTable.AddColumn("BOMPRICE","PRICE_4","FLOAT",0.00,16)
	F.Data.DataTable.AddColumn("BOMPRICE","S4","BOOLEAN",FALSE)
	F.Data.DataTable.AddColumn("BOMPRICE","PRICE_5","FLOAT",0.00,16)
	F.Data.DataTable.AddColumn("BOMPRICE","S5","BOOLEAN",FALSE)
	
	f.Data.DataTable.AddExpressionColumn("BOMPRICE","MARGIN1","FLOAT","(PRICE_1 - UNIT_COST) / PRICE_1")
	f.Data.DataTable.AddExpressionColumn("BOMPRICE","MARGIN2","FLOAT","(PRICE_2 - UNIT_COST) / PRICE_2")
	f.Data.DataTable.AddExpressionColumn("BOMPRICE","MARGIN3","FLOAT","(PRICE_3 - UNIT_COST) / PRICE_3")
	f.Data.DataTable.AddExpressionColumn("BOMPRICE","MARGIN4","FLOAT","(PRICE_4 - UNIT_COST) / PRICE_4")
	f.Data.DataTable.AddExpressionColumn("BOMPRICE","MARGIN5","FLOAT","(PRICE_5 - UNIT_COST) / PRICE_5")
	
	'gridview for sell prices
	F.Data.DataView.Create("BOMPRICE","V_BOMPRICE")
	Gui.bom_detail.GGC_PRICES.DataSource("BOMPRICE")
	Gui.bom_detail.GGC_PRICES.AddGridviewFromDataView("GV_PRICES","BOMPRICE","V_BOMPRICE")
	
	Gui.bom_detail.GGC_PRICES.SuspendLayout()
	
	'add formatting here
	'header font
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","QUANTITY","HeaderFontBold",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","UNIT_COST","HeaderFontBold",True)
	'Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S1","HeaderFontBold",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_1","HeaderFontBold",True)
	'Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S2","HeaderFontBold",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_2","HeaderFontBold",True)
	'Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S3","HeaderFontBold",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_3","HeaderFontBold",True)
	'Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S4","HeaderFontBold",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_4","HeaderFontBold",True)
	'Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S5","HeaderFontBold",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_5","HeaderFontBold",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN1","HeaderFontBold",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN2","HeaderFontBold",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN3","HeaderFontBold",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN4","HeaderFontBold",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN5","HeaderFontBold",True)
	'alignment
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","QUANTITY","headerHalignment","Far")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","UNIT_COST","headerHalignment","Far")
	'Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S1","headerHalignment","Center")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_1","headerHalignment","Far")
	'Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S2","headerHalignment","Center")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_2","headerHalignment","Far")
	'Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S3","headerHalignment","Center")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_3","headerHalignment","Far")
	'Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S4","headerHalignment","Center")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_4","headerHalignment","Far")
	'Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S5","headerHalignment","Center")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_5","headerHalignment","Far")
	
	'cell display type
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","QUANTITY","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","UNIT_COST","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_1","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_2","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_3","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_4","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_5","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN1","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN2","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN3","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN4","DisplayFormatType","NUMERIC")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN5","DisplayFormatType","NUMERIC")
	'cell display format
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","QUANTITY","DisplayCustomNumeric","####.00")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","UNIT_COST","DisplayCustomNumeric","$#####.00")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_1","DisplayCustomNumeric","$#####.00")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_2","DisplayCustomNumeric","$#####.00")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_3","DisplayCustomNumeric","$#####.00")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_4","DisplayCustomNumeric","$#####.00")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_5","DisplayCustomNumeric","$#####.00")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN1","DisplayCustomNumeric","#####.00%")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN2","DisplayCustomNumeric","#####.00%")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN3","DisplayCustomNumeric","#####.00%")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN4","DisplayCustomNumeric","#####.00%")
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN5","DisplayCustomNumeric","#####.00%")
	'allowedit
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S1","AllowEdit",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S2","AllowEdit",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S3","AllowEdit",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S4","AllowEdit",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S5","AllowEdit",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN1","AllowEdit",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN2","AllowEdit",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN3","AllowEdit",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN4","AllowEdit",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN5","AllowEdit",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_1","AllowEdit",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_2","AllowEdit",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_3","AllowEdit",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_4","AllowEdit",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_5","AllowEdit",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S1","ReadOnly",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S2","ReadOnly",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S3","ReadOnly",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S4","ReadOnly",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S5","ReadOnly",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN1","ReadOnly",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN2","ReadOnly",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN3","ReadOnly",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN4","ReadOnly",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN5","ReadOnly",True)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_1","ReadOnly",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_2","ReadOnly",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_3","ReadOnly",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_4","ReadOnly",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_5","ReadOnly",False)
	'column width
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","QUANTITY","Width",35)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","UNIT_COST","Width",35)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S1","Width",10)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S2","Width",10)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S3","Width",10)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S4","Width",10)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S5","Width",10)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_1","Width",45)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_2","Width",45)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_3","Width",45)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_4","Width",45)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_5","Width",45)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN1","Width",45)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN2","Width",45)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN3","Width",45)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN4","Width",45)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN5","Width",45)
	
	f.Intrinsic.String.Build("{0}\custom\4986\GCG_4986_ColSelect_Btn.png",v.Caller.GlobalDir,v.Local.sImageFile)
	f.Intrinsic.File.Exists(v.Local.sImageFile,v.Local.bEx)
	f.Intrinsic.Control.If(v.Local.bEx)
		Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S1","Image",v.Local.sImageFile)
		Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S2","Image",v.Local.sImageFile)
		Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S3","Image",v.Local.sImageFile)
		Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S4","Image",v.Local.sImageFile)
		Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S5","Image",v.Local.sImageFile)
	f.Intrinsic.Control.EndIf

	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S1","AllowSort",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S2","AllowSort",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S3","AllowSort",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S4","AllowSort",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S5","AllowSort",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S1","ShowCaption",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S2","ShowCaption",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S3","ShowCaption",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S4","ShowCaption",False)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S5","ShowCaption",False)	
	
	'column display sequence
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","QUANTITY","VisibleIndex",0)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","UNIT_COST","VisibleIndex",1)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN1","VisibleIndex",2)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_1","VisibleIndex",3)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S1","VisibleIndex",4)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN2","VisibleIndex",5)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_2","VisibleIndex",6)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S2","VisibleIndex",7)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN3","VisibleIndex",8)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_3","VisibleIndex",9)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S3","VisibleIndex",10)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN4","VisibleIndex",11)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_4","VisibleIndex",12)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S4","VisibleIndex",13)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","MARGIN5","VisibleIndex",14)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","PRICE_5","VisibleIndex",15)
	Gui.bom_detail.GGC_PRICES.SetColumnProperty("GV_PRICES","S5","VisibleIndex",16)

	Gui.bom_detail.GGC_PRICES.ResumeLayout()
	
f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.BuildBomCostTables.End

Program.Sub.getBomMaster_RouterInfo_MergeBom.Start
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''OBSOLETE''''''''''''''''''''''''''''''''
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	'BOM(for router grid),TEM_BOM,BOM_MASTER will have the same table schema
	V.Local.sSql.Declare

	f.Intrinsic.Control.If(v.DataTable.BOM.Exists,=,False)
		f.Intrinsic.ui.Msgbox("BOM table is not created beforehand getBomMaster. Please contact GSS.","Attention")
		f.Intrinsic.Control.CallSub("Form_Unload")
	f.Intrinsic.Control.EndIf
	
	'clone to BOM_MASTER. BOM_MASTER will have the table schema of BOM table
	F.Intrinsic.Control.If(V.DataTable.BOM_MASTER.Exists)
		f.Data.DataTable.Close("BOM_MASTER")	
	F.Intrinsic.Control.EndIf	
	f.Data.DataTable.Clone("BOM","BOM_MASTER",True)	
	
	'1/GET BOM MASTER
	'this sub is called repeatedly while the application is open, so we just want to make sure that the datatables are properly closed prior to loading/rebuilding data.

	f.Intrinsic.Control.If(v.DataTable.TEMP_BOM.Exists)
		f.Data.DataTable.Close("TEMP_BOM")
	f.Intrinsic.Control.EndIf	

	'clone to BOM_MASTER
	F.Intrinsic.Control.If(V.DataTable.BOM_MASTER.Exists)
		f.Data.DataTable.Close("BOM_MASTER")	
	F.Intrinsic.Control.EndIf	
	f.Data.DataTable.Clone("BOM","BOM_MASTER",True)
	
	'TEMP_MASTER
	'Category: 
	'blank for Normal		P ? Phantom 	X ? Exclude 	1 ? Setup 	R ? Reference
	
	'NOTICE FOR QUANTITY: 
	'IF(BM.CATEGORY <> '1' , CAST(BM.QUANTITY AS DOUBLE) , CAST (0 AS DOUBLE)) AS QTY
	
	'NOTICE FOR SET_UP: 
	'IF(BM.CATEGORY = '1', CAST(BM.QUANTITY AS DOUBLE) , CAST (0 AS DOUBLE)) AS SET_UP
	
	'TEMP_BOM will have the table schema of BOM table, in order to merge later to BOM_Master which also has the same table schema of BOM table
	v.Local.sSql.Set("SELECT PARENT AS BPARENT, SEQUENCE_BOM AS BOM_SEQ, PART, IF(CATEGORY <> '1', QUANTITY ,Convert(0,SQL_Float)) AS QTY, IF(CATEGORY = '1' ,QUANTITY, Convert(0,SQL_Float)) AS SET_UP, FREQUENCY,COST, UM_INVENTORY AS UM, CATEGORY AS CAT_CODE, SOURCE AS SOURCE_CODE, BOM_COMPLETE AS COMPLETE, TAG,    Insert_Bom,Date_Maintenance,Date_Start,Date_Stop,BM_Serial_Start,BM_Serial_Stop,Purge_Flag,Ordr_USR_Flag,Drawing,Date_Last_Chg,Time_Last_Chg,Last_Chg_By,Last_Chg_Prog,Drawing_Size,Req_Trace,Cost_Date,Inactive,Chg_Rev,Setup_Qty from BOM_MSTR  ORDER BY PARENT, SEQUENCE_BOM")	
	'WHERE BM.INACTIVE <> 1
	
	'CAST THE 1 AS SETUP?  OR CONTINUE TO PULL IT IN FROM THE ROUTER?		
	f.Intrinsic.Control.If(v.DataTable.TEMP_MASTER.Exists)
		f.Data.DataTable.Close("TEMP_MASTER")
	f.Intrinsic.Control.EndIf	
	
	F.Data.DataTable.CreateFromSQL("TEMP_MASTER","conx",V.Local.sSql,True)

	'ENG_BOM
	V.Local.sSql.Set("select DISTINCT PART, DESCRIPTION AS DESCR_BP, DESCRIPTION FROM V_BOM_ENG where location = ''")
	f.Intrinsic.Control.If(v.DataTable.ENG_BOM.Exists)
		f.Data.DataTable.Close("ENG_BOM")
	f.Intrinsic.Control.EndIf	
	F.Data.DataTable.CreateFromSQL("ENG_BOM","conx",V.Local.sSql,True)
	
	'2/GET ROUTER INFO (QUERY INTO view for some reason does not pull some data and slow. So we query into ROUTER_LINE WITH IsNull(Router_Type,'') = 'L')
	'get the sequence numbers for material lines in routers, so we can merge this back in to the BOM
	V.Local.sSql.Set("SELECT ROUTER, LINE_ROUTER AS RTR_SEQ, PART_WC_OUTSIDE AS PART, DESC_RT_LINE AS DESCRIPTION FROM ROUTER_LINE  WHERE IsNull(Router_Type,'') = 'L' AND LMO = 'M'  ")
	
	F.Data.DataTable.CreateFromSQL("TEMP_ROUTER","conx",V.Local.sSql,True)	
	
	'3/MERGE BOM
	'TEMP_MASTER is the temporary BOM
	'TEMP_ROUTER is the RTR_SEQ that needs to be MERGED in.
	'ENG_BOM has the description for the bom parent (this is used in the event that the bom parent isn't actually an inventory item yet.)
	'create a filtered view of missing descriptions
	'then merge in the descriptions from MATERIAL	
	f.Data.Linq.Join("LEFTJOIN","DATATABLE","TEMP_MASTER*!*M","DATATABLE","TEMP_ROUTER*!*R","M.BPARENT = R.ROUTER AND M.PART = R.PART","M.BPARENT*!*M.BOM_SEQ*!*R.RTR_SEQ*!*M.PART*!*M.QTY*!*M.COST*!*M.UM*!*M.CAT_CODE*!*M.SOURCE_CODE*!*M.COMPLETE*!*M.FREQUENCY*!*M.SET_UP*!*M.TAG*!*M.Insert_Bom*!*M.Date_Maintenance*!*M.Date_Start*!*M.Date_Stop*!*M.BM_Serial_Start*!*M.BM_Serial_Stop*!*M.Purge_Flag*!*M.Ordr_USR_Flag*!*M.Drawing*!*M.Date_Last_Chg*!*M.Time_Last_Chg*!*M.Last_Chg_By*!*M.Last_Chg_Prog*!*M.Drawing_Size*!*M.Req_Trace*!*M.Cost_Date*!*M.Inactive*!*M.Chg_Rev*!*M.Setup_Qty","","","M.BPARENT ASC, R.RTR_SEQ ASC","TEMP_RETURN",True)
	
	'Join TEM_RETURN with TEMP_ROUTER where BPARENT = ROUTER and PART = PART
	F.Data.Linq.Join("LEFTJOIN","DATATABLE","TEMP_RETURN*!*M","DATATABLE","ENG_BOM*!*B","M.BPARENT = B.PART","M.BPARENT*!*M.BOM_SEQ*!*M.RTR_SEQ*!*M.PART*!*M.QTY*!*M.COST*!*M.UM*!*M.CAT_CODE*!*M.SOURCE_CODE*!*M.COMPLETE*!*M.FREQUENCY*!*M.SET_UP*!*B.DESCR_BP*!*M.TAG*!*M.Insert_Bom*!*M.Date_Maintenance*!*M.Date_Start*!*M.Date_Stop*!*M.BM_Serial_Start*!*M.BM_Serial_Stop*!*M.Purge_Flag*!*M.Ordr_USR_Flag*!*M.Drawing*!*M.Date_Last_Chg*!*M.Time_Last_Chg*!*M.Last_Chg_By*!*M.Last_Chg_Prog*!*M.Drawing_Size*!*M.Req_Trace*!*M.Cost_Date*!*M.Inactive*!*M.Chg_Rev*!*M.Setup_Qty","","","M.BPARENT ASC, M.RTR_SEQ ASC","TEMP_RETURN2",True)
	
	'Join TEM_RETURN2 with ENG_BOM to ONLY get from ENG_BOM: DESCR_BP (bom parent description)
	F.Data.Linq.Join("LEFTJOIN","DATATABLE","TEMP_RETURN2*!*M","DATATABLE","ENG_BOM*!*B","M.PART = B.PART","M.BPARENT*!*M.BOM_SEQ*!*M.RTR_SEQ*!*M.PART*!*M.QTY*!*M.COST*!*M.UM*!*M.CAT_CODE*!*M.SOURCE_CODE*!*M.COMPLETE*!*M.FREQUENCY*!*M.SET_UP*!*M.DESCR_BP*!*B.DESCRIPTION*!*M.TAG*!*M.Insert_Bom*!*M.Date_Maintenance*!*M.Date_Start*!*M.Date_Stop*!*M.BM_Serial_Start*!*M.BM_Serial_Stop*!*M.Purge_Flag*!*M.Ordr_USR_Flag*!*M.Drawing*!*M.Date_Last_Chg*!*M.Time_Last_Chg*!*M.Last_Chg_By*!*M.Last_Chg_Prog*!*M.Drawing_Size*!*M.Req_Trace*!*M.Cost_Date*!*M.Inactive*!*M.Chg_Rev*!*M.Setup_Qty","","","M.BPARENT ASC, M.RTR_SEQ ASC","TEMP_RETURN3",True)
	
	'Join TEM_RETURN3 with MATERIAL to get from MATERIAL: DESCRIPTION_2,DESCRIPTION_3,PURCH_COST,PURCHASE_FACTOR
	f.Data.Linq.Join("LEFTJOIN","DATATABLE","TEMP_RETURN3*!*M","DATATABLE","MATERIAL*!*T","M.PART = T.PART","M.BPARENT*!*M.DESCR_BP*!*M.BOM_SEQ*!*M.RTR_SEQ*!*M.PART*!*M.QTY*!*M.COST*!*M.UM*!*M.CAT_CODE*!*M.SOURCE_CODE*!*M.COMPLETE*!*M.FREQUENCY*!*M.SET_UP*!*M.TAG*!*M.DESCRIPTION*!*T.DESCRIPTION_2*!*T.DESCRIPTION_3*!*T.PURCH_COST*!*T.PURCHASE_FACTOR*!*M.Insert_Bom*!*M.Date_Maintenance*!*M.Date_Start*!*M.Date_Stop*!*M.BM_Serial_Start*!*M.BM_Serial_Stop*!*M.Purge_Flag*!*M.Ordr_USR_Flag*!*M.Drawing*!*M.Date_Last_Chg*!*M.Time_Last_Chg*!*M.Last_Chg_By*!*M.Last_Chg_Prog*!*M.Drawing_Size*!*M.Req_Trace*!*M.Cost_Date*!*M.Inactive*!*M.Chg_Rev*!*M.Setup_Qty","","","M.BPARENT ASC, M.RTR_SEQ ASC","TEMP_RETURN4",True)
	
	f.Data.DataTable.Merge("TEMP_RETURN4","BOM_MASTER",False,2)
	f.Data.DataTable.Close("TEMP_MASTER")
	F.Data.DataTable.Close("ENG_BOM")
	F.Data.DataTable.Close("TEMP_ROUTER")
	F.Data.DataTable.Close("TEMP_RETURN")
	F.Data.DataTable.Close("TEMP_RETURN2")
	F.Data.DataTable.Close("TEMP_RETURN3")
	F.Data.DataTable.Close("TEMP_RETURN4")
	
	'bom parent dictionary - this is all of the parent items
	F.Intrinsic.Control.If(V.DataView.BOM_MASTER!V_PARENTPARTS.Exists)
		F.Data.DataView.Close("BOM_MASTER","V_PARENTPARTS")
	F.Intrinsic.Control.EndIf
	F.Data.DataView.Create("BOM_MASTER","V_PARENTPARTS",22)
	
	'PROD_LINES dict is created in getMaterial, so getMaterial needs to be called first.
	F.Data.DataTable.FillFromDictionary("BOM_MASTER","PROD_LINES","PART","PL")	

f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.getBomMaster_RouterInfo_MergeBom.End

Program.Sub.Create_GV_Serialize.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)
	v.Local.iUserID.Declare
	v.Local.sSQL.Declare

	f.Global.Security.GetUserId(v.Caller.User,v.Caller.CompanyCode,v.Local.iUserID)
	f.Intrinsic.String.Build("Select SVAL as GVType,Program as Name,BVal as Apply,VVAL as SerVal from GS_Registry where User_ID =  '{0}' and Company = '{1}' and Reg_ID = '4986' and Seq in ('101','102','103','104','105','106') order by Program",v.Local.iUserID,v.Caller.CompanyCode,v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.FavoriteGVs.Exists)
		f.Data.DataTable.Close("FavoriteGVs")
	f.Intrinsic.Control.EndIf	
	f.ODBC.Connection!conC.OpenCommonConnection
	f.Data.DataTable.CreateFromSQL("FavoriteGVs","conC",v.Local.sSQL,True)
	f.ODBC.Connection!ConC.Close
	
	'Router
	f.Data.DataView.Create("FavoriteGVs","vF",22,"GVType = 'GV_CHILD'","")
	f.Intrinsic.Control.If(v.DataTable.GVRTR.Exists)
		f.Data.DataTable.Close("GVRTR")
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.ToDataTable("FavoriteGVs","vF","GVRTR",True)
	f.Data.DataTable.AddColumn("GVRTR","Del","String","Del")
	
	Gui.GVSettings.gsGVRTR.AddGridViewFromDataTable("gvGVRTR","GVRTR")
	f.Intrinsic.Control.CallSub(Format_GVSettings,"gs","gsGVRTR","gv","gvGVRTR")	
	Gui.GVSettings.gsGVRTR.Mainview("gvGVRTR")
	
	'GV_QLINES
	f.Data.DataView.SetFilter("FavoriteGVs","vF","GVType = 'GV_QLINES'")
	f.Intrinsic.Control.If(v.DataTable.GVQUOTE.Exists)
		f.Data.DataTable.Close("GVQUOTE")
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.ToDataTable("FavoriteGVs","vF","GVQUOTE",True)
	f.Data.DataTable.AddColumn("GVQUOTE","Del","String","Del")
	
	Gui.GVSettings.gsGVQUOTE.AddGridViewFromDataTable("gvGVQUOTE","GVQUOTE")
	f.Intrinsic.Control.CallSub(Format_GVSettings,"gs","gsGVQUOTE","gv","gvGVQUOTE")
	Gui.GVSettings.gsGVQUOTE.Mainview("gvGVQUOTE")
	
	'MATERIAL
	f.Data.DataView.SetFilter("FavoriteGVs","vF","GVType = 'GV_MATERIAL'")
	f.Intrinsic.Control.If(v.DataTable.GVMAT.Exists)
		f.Data.DataTable.Close("GVMAT")
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.ToDataTable("FavoriteGVs","vF","GVMAT",True)
	f.Data.DataTable.AddColumn("GVMAT","Del","String","Del")
	
	Gui.GVSettings.gsGVMAT.AddGridViewFromDataTable("gvGVMAT","GVMAT")
	f.Intrinsic.Control.CallSub(Format_GVSettings,"gs","gsGVMAT","gv","gvGVMAT")
	Gui.GVSettings.gsGVMAT.Mainview("gvGVMAT")
	
	'WC
	f.Data.DataView.SetFilter("FavoriteGVs","vF","GVType = 'GV_WCENTER'")
	f.Intrinsic.Control.If(v.DataTable.GVWC.Exists)
		f.Data.DataTable.Close("GVWC")
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.ToDataTable("FavoriteGVs","vF","GVWC",True)
	f.Data.DataTable.AddColumn("GVWC","Del","String","Del")
	
	Gui.GVSettings.gsGVWC.AddGridViewFromDataTable("gvGVWC","GVWC")
	f.Intrinsic.Control.CallSub(Format_GVSettings,"gs","gsGVWC","gv","gvGVWC")
	Gui.GVSettings.gsGVWC.Mainview("gvGVWC")
	
	'OUTS
	f.Data.DataView.SetFilter("FavoriteGVs","vF","GVType = 'GV_OUTS'")
	f.Intrinsic.Control.If(v.DataTable.GVOUT.Exists)
		f.Data.DataTable.Close("GVOUT")
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.ToDataTable("FavoriteGVs","vF","GVOUT",True)
	f.Data.DataTable.AddColumn("GVOUT","Del","String","Del")
	
	Gui.GVSettings.gsGVOUT.AddGridViewFromDataTable("gvGVOUT","GVOUT")
	f.Intrinsic.Control.CallSub(Format_GVSettings,"gs","gsGVOUT","gv","gvGVOUT")
	Gui.GVSettings.gsGVOUT.Mainview("gvGVOUT")
	
	'OPCODE
	f.Data.DataView.SetFilter("FavoriteGVs","vF","GVType = 'GV_OPERATIONS'")
	f.Intrinsic.Control.If(v.DataTable.GVOPC.Exists)
		f.Data.DataTable.Close("GVOPC")
	f.Intrinsic.Control.EndIf	
	f.Data.DataView.ToDataTable("FavoriteGVs","vF","GVOPC",True)
	f.Data.DataTable.AddColumn("GVOPC","Del","String","Del")
	
	Gui.GVSettings.gsGVOPC.AddGridViewFromDataTable("gvGVOPC","GVOPC")
	f.Intrinsic.Control.CallSub(Format_GVSettings,"gs","gsGVOPC","gv","gvGVOPC")
	Gui.GVSettings.gsGVOPC.Mainview("gvGVOPC")		

f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Create_GV_Serialize.End

Program.Sub.Format_GVSettings.Start
f.Intrinsic.Control.Try
f.Intrinsic.Control.CallSub(Call_Debug,"sSub",v.Ambient.CurrentSubroutine)

	'HeaderFontBold
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"GVType","HeaderFontBold",True)
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Name","HeaderFontBold",True)
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Apply","HeaderFontBold",True)
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Del","HeaderFontBold",True)
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"SerVal","HeaderFontBold",True)
	
	'Visible
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"GVType","Visible",False)
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"SerVal","Visible",False)	
	
	'Allow Edit
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Name","AllowEdit",True)
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Apply","AllowEdit",False)
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Del","AllowEdit",False)
	
	'Read Only
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Name","ReadOnly",False)
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Apply","ReadOnly",True)
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Del","ReadOnly",True)

	
	'HeaderHAlignment
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Del","HeaderHAlignment","center")
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Apply","HeaderHAlignment","center")
	
	gui.GVSettings.[v.Args.gs].ColumnEdit(v.Args.gv,"Del","editorbutton","Del")
	
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Del","MinWidth","30")
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Del","MaxWidth","30")
	
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Apply","MinWidth","45")
	gui.GVSettings.[v.Args.gs].SetColumnProperty(v.Args.gv,"Apply","MaxWidth","45")	


f.Intrinsic.Control.catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.Format_GVSettings.End